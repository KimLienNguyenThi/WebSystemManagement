--CREATE DATABASE MANAGEMENT;

USE MANAGEMENT ;

-- T?O B?NG COMPANY
CREATE TABLE COMPANY (
    ID INT PRIMARY KEY IDENTITY NOT NULL,
    CUSTOMERID VARCHAR(15) NOT NULL UNIQUE,      -- MÃ KH (S? ???C T?O T? ??NG)
    COMPANYNAME NVARCHAR(150) NOT NULL,			-- TÊN KH
    TAXCODE VARCHAR(30) NOT NULL UNIQUE,		-- MÃ S? THU?
    COMPANYACCOUNT VARCHAR(100) NOT NULL UNIQUE, -- EMAIL
    ACCOUNTISSUEDDATE DATETIME,				-- NGÀY C?P TK
    CPHONENUMBER VARCHAR(10) NOT NULL UNIQUE, -- S?T	
    CADDRESS NVARCHAR(150) NOT NULL,     -- ??A CH?
	IS_ACTIVE BIT, --0 Bản nháp, 1 bản duyệt
	
    --CUSTOMERTYPE BIT NOT NULL,            -- PHÂN LO?I KH (0: BÌNH TH??NG, 1: VIP)
	--SERVICETYPE NVARCHAR(50) NOT NULL,	 -- LO?I D?CH V?
	--CONTRACTNUMBER VARCHAR(10) NOT NULL  -- S? H?P ??NG
	--OPERATINGSTATUS BIT NOT NULL,            -- TR?NG THÁI (0: KHÔNG HO?T ??NG, 1: HO?T ??NG)
);

-- T?O B?NG ACCOUNT
CREATE TABLE ACCOUNT (
    CUSTOMERID VARCHAR(15) PRIMARY KEY NOT NULL, -- MÃ KH (KHÓA CHÍNH & KHÓA NGO?I)
    ROOTACCOUNT VARCHAR(100) NOT NULL UNIQUE, -- EMAIL
    ROOTNAME NVARCHAR(40) NOT NULL,          -- H? TÊN
    RPHONENUMBER VARCHAR(10) NOT NULL UNIQUE, -- S?T
    DATEOFBIRTH DATETIME NOT NULL,           -- NGÀY SINH
    GENDER BIT NOT NULL,                     -- GI?I TÍNH (0: NAM, 1: N?)
	--IS_ACTIVE BIT, --0 Bản nháp, 1 bản duyệt
    CONSTRAINT FK_ACCOUNT_COMPANY FOREIGN KEY (CUSTOMERID) REFERENCES COMPANY(CUSTOMERID) ON DELETE CASCADE
);

--T?O B?NG LOGIN CLIENT
CREATE TABLE LOGINCLIENT(
	CUSTOMERID VARCHAR(15) NOT NULL PRIMARY KEY,
	FOREIGN KEY (CUSTOMERID) REFERENCES COMPANY(CUSTOMERID) ON DELETE CASCADE,
	USERNAME VARCHAR(40) NOT NULL,
	PASSWORDCLIENT VARCHAR(100) NOT NULL
);

--T?O B?NG RESETPASS
CREATE TABLE RESETPASSWORD(
	ID INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
	CUSTOMERID VARCHAR(15) NOT NULL,			--MÃ KH
	FOREIGN KEY (CUSTOMERID) REFERENCES COMPANY(CUSTOMERID),
	USERNAME VARCHAR(40) NOT NULL,
	PASSWORDCLIENT VARCHAR(100) NOT NULL
);

--LO?I H? TR? DỰA VÀO ĐÂY CHIA VỀ BỘ PHẬN 
CREATE TABLE SUPPORT_TYPE (
    ID INT PRIMARY KEY IDENTITY(1,1) NOT NULL, 
    SUPPORT_CODE VARCHAR(10) NOT NULL UNIQUE, 
    SUPPORT_NAME NVARCHAR(40) NOT NULL UNIQUE
);

--NHÓM D?CH V? 
CREATE TABLE SERVICE_GROUP (
    ID INT PRIMARY KEY IDENTITY(1,1) NOT NULL, 
    SERVICE_GROUPID VARCHAR(10) NOT NULL UNIQUE, 
    GROUP_NAME NVARCHAR(50) NOT NULL
);

--LO?I D?CH V?
CREATE TABLE SERVICE_TYPE (
    ID INT PRIMARY KEY IDENTITY(1,1) NOT NULL,  
    SERVICE_GROUPID VARCHAR(10) NOT NULL,
    SERVICE_TYPENAME NVARCHAR(255) NOT NULL,
	DESCRIPTION_SR NVARCHAR(MAX) NOT NULL,  -- Mô tả chi tiết về loại dịch vụ
    FOREIGN KEY (SERVICE_GROUPID) REFERENCES SERVICE_GROUP(SERVICE_GROUPID)
);

--T?O B?NG H?P ??NG
CREATE TABLE CONTRACTS (
    ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY, -- CHỈ DÙNG ID LÀM KHÓA CHÍNH
    CONTRACTNUMBER VARCHAR(10) NOT NULL UNIQUE, --hợp đồng
    STARTDATE DATETIME NOT NULL,
    ENDDATE DATETIME NOT NULL,
	SERVICE_TYPEID INT NULL,           --loại dịch vụ
	CUSTOMERID VARCHAR(15) NOT NULL,
	ORIGINAL VARCHAR(10) NULL,				-- mã hợp đồng gốc nếu có thay đổi hạn 
	CUSTOMERTYPE BIT NOT NULL,            -- PHÂN LO?I KH (0: BÌNH TH??NG, 1: VIP)
    FOREIGN KEY (SERVICE_TYPEID) REFERENCES SERVICE_TYPE(ID) ON DELETE SET NULL,
    FOREIGN KEY (CUSTOMERID) REFERENCES COMPANY(CUSTOMERID),
	IS_ACTIVE BIT NOT NULL, -- 0 NGỪNG HOẠT ĐỘNG, 1 HOẠT ĐỘNG
	CONSTATUS INT ,--0: CHƯA KÝ, 1: Đã ký, 2. Chờ Client ký , 3 :Kyhoantat 4.Đã duyệt ký  5 đã thanh toán 6 Duyệt (chính thức),7: Gia hạn, 8: Bị từ chối  
	MESSAGEun [nvarchar](500) NULL,
);

-- Bảng lưu file hợp đồng
CREATE TABLE CONTRACT_FILES (
    ID INT IDENTITY PRIMARY KEY,
    CONTRACTNUMBER VARCHAR(10) NOT NULL, --hợp đồng
    CONFILE_NAME NVARCHAR(255) NOT NULL,
    FILE_PATH NVARCHAR(500) NOT NULL,
    UPLOADED_AT DATETIME DEFAULT GETDATE(),
    FILE_STATUS INT --0: CHƯA KÝ, 1: Đã ký, 2. Chờ Client ký , 3 :Kyhoantat 4.Đã duyệt ký  5 đã thanh toán 6 Duyệt (chính thức),7: Gia hạn, 8: Bị từ chối  
    FOREIGN KEY (CONTRACTNUMBER) REFERENCES CONTRACTS(CONTRACTNUMBER)
);

-- Bảng lưu lịch sử thay đổi trạng thái
CREATE TABLE CONTRACT_STATUS_HISTORY (
    ID INT IDENTITY PRIMARY KEY,
    CONTRACTNUMBER VARCHAR(10) NOT NULL, --hợp đồng
    OLD_STATUS INT,
    NEW_STATUS INT,
    CHANGED_AT DATETIME DEFAULT GETDATE(),
    CHANGED_BY NVARCHAR(100),
    FOREIGN KEY (CONTRACTNUMBER) REFERENCES CONTRACTS(CONTRACTNUMBER),
);

--T?O B?NG NHÂN VIÊN
CREATE TABLE STAFF (
	ID INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
	STAFFID VARCHAR(10) NOT NULL UNIQUE,
	STAFFEMAIL VARCHAR(100) NOT NULL UNIQUE, -- EMAIL
	STAFFNAME NVARCHAR(40) NOT NULL,
	STAFFDATE DATETIME,
	STAFFGENDER BIT, 
	STAFFADDRESS NVARCHAR(100),
	STAFFPHONE VARCHAR(10) NOT NULL UNIQUE,
	DEPARTMENT NVARCHAR(50) NOT NULL --B? PH?N
);

--T?O B?NG LOGIN NHÂN VIÊN
CREATE TABLE LOGINADMIN(
	STAFFID VARCHAR(10) NOT NULL PRIMARY KEY,				
	FOREIGN KEY (STAFFID) REFERENCES STAFF(STAFFID) ON DELETE CASCADE,
	USERNAMEAD VARCHAR(40) NOT NULL,
	PASSWORDAD VARCHAR(100) NOT NULL
);

--T?O B?NG YÊU C?U
CREATE TABLE REQUIREMENTS
(
	ID INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
	REQUIREMENTSID VARCHAR(10) NOT NULL UNIQUE, --MÃ YÊU C?U
	--REQUIREMENTSSTATUS NVARCHAR(40) NOT NULL,--TR?NG THÁI YÊU C?U
	REQUIREMENTSSTATUS INT NOT NULL,--TR?NG THÁI 0 Yêu cầu hỗ trợ,  1 Yêu cầu chấp nhận, 2.Đang xử lý  3. hỗ trợ hoàn tất 4. Trì hoãn  5. Đóng/hủy
	DATEOFREQUEST DATETIME,					--NGÀY T?O
	DESCRIPTIONOFREQUEST NVARCHAR(MAX) NOT NULL   ,    --MÔ  TA YÊU C?U s
    CONTRACTNUMBER VARCHAR(10) NOT NULL,
	SUPPORT_CODE VARCHAR(10) NOT NULL, 
	--FOREIGN KEY (CUSTOMERID) REFERENCES COMPANY(CUSTOMERID),
	FOREIGN KEY (SUPPORT_CODE) REFERENCES SUPPORT_TYPE(SUPPORT_CODE),
	FOREIGN KEY (CONTRACTNUMBER) REFERENCES CONTRACTS(CONTRACTNUMBER),
	IsReviewed BIT NOT NULL DEFAULT 0
);


--T?O B?NG L?CH S? C?P NH?T YÊU C?U
CREATE TABLE HISTORYREQ
(
	ID INT PRIMARY KEY IDENTITY(1,1) NOT NULL, 
	REQUIREMENTSID VARCHAR(10) NOT NULL, 
	DESCRIPTIONOFREQUEST NVARCHAR(MAX) NOT NULL   ,    --MÔ  TA YÊU C?U 
	DATEOFUPDATE DATETIME,					--NGÀY T?O
	BEFORSTATUS INT NOT NULL,--TR?NG THÁI YÊU C?U TR??C 
	APTERSTATUS INT NOT NULL,--TR?NG THÁI YÊU C?U SAU
	STAFFID VARCHAR(10) NOT NULL,
	FOREIGN KEY (STAFFID) REFERENCES STAFF(STAFFID),
	FOREIGN KEY (REQUIREMENTSID) REFERENCES REQUIREMENTS(REQUIREMENTSID)
);

--TẠO BẢNG PHÂN CÔNG YÊU CẦU CHO NHÂN VIÊN BỘ PHẬN NÀO 
CREATE TABLE ASSIGN(
	ID INT PRIMARY KEY IDENTITY(1,1) NOT NULL, 
	REQUIREMENTSID VARCHAR(10) NOT NULL, 
	DEPARTMENT NVARCHAR(50) NOT NULL,--B? PH?N LẤY THEO LOẠI HỖ TRỢ
	STAFFID VARCHAR(10),   --LÚC SAU NHÂN VIÊN BỘ PHẬN ĐÓ CÓ THỂ NHẬN
	FOREIGN KEY (STAFFID) REFERENCES STAFF(STAFFID),
	FOREIGN KEY (REQUIREMENTSID) REFERENCES REQUIREMENTS(REQUIREMENTSID)
);

--T?O B?NG ?ÁNH GIÁ
CREATE TABLE REVIEW (
    ID INT PRIMARY KEY IDENTITY(1,1) NOT NULL, 
    REQUIREMENTSID VARCHAR(10) NOT NULL,  -- MÃ YÊU C?U
    COMMENT NVARCHAR(MAX) NOT NULL,  --Nội dung ?ÁNH GIÁ Tổng thể
    DATEOFUPDATE DATETIME DEFAULT GETDATE(),  -- NGÀY ?ÁNH GIÁ
    FOREIGN KEY (REQUIREMENTSID) REFERENCES REQUIREMENTS(REQUIREMENTSID)
);

CREATE TABLE REVIEW_CRITERIA (
    ID INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
    CRITERIA_NAME NVARCHAR(100) NOT NULL UNIQUE  -- TÊN TIÊU CHÍ (VD: "THÁI ??", "TH?I GIAN X? LÝ")
);

CREATE TABLE REVIEW_DETAIL (
    ID INT PRIMARY KEY IDENTITY(1,1) NOT NULL, 
    REVIEW_ID INT NOT NULL,  -- LIÊN K?T V?I B?NG REVIEW
    CRITERIA_ID INT NOT NULL,  -- LIÊN K?T V?I B?NG REVIEW_CRITERIA
    STAR INT CHECK (STAR BETWEEN 1 AND 5) NOT NULL,  -- ?I?M (1-5 SAO)
    FOREIGN KEY (REVIEW_ID) REFERENCES REVIEW(ID),
    FOREIGN KEY (CRITERIA_ID) REFERENCES REVIEW_CRITERIA(ID)
);

--TẠO BẢNG QUẢN LÝ THANH TOÁN
CREATE TABLE PAYMENT(
    ID INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
    CONTRACTNUMBER VARCHAR(10) NOT NULL,  -- MÃ HỢP ĐỒNG
	AMOUNT DECIMAL(18,2) NOT NULL,        -- SỐ TIỀN THANH TOÁN
	PAYMENTSTATUS BIT NOT NULL,           -- 0: CHƯA THANH TOÁN, 1: ĐÃ THANH TOÁN
    FOREIGN KEY (CONTRACTNUMBER) REFERENCES CONTRACTS(CONTRACTNUMBER)
);

CREATE TABLE PAYMENT_TRANSACTION (
    ID INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
    TRANSACTION_CODE VARCHAR(50)  UNIQUE,       -- Mã nội bộ duy nhất
    AMOUNT DECIMAL(18,2),                      -- Số tiền giao dịch
    BANK_CODE NVARCHAR(20),                             -- Mã ngân hàng (vnp_BankCode)
    BANK_TRANSACTION_CODE NVARCHAR(50),                 -- Mã giao dịch tại ngân hàng (vnp_BankTranNo)
    CARD_TYPE NVARCHAR(20),                             -- Loại thẻ (ATM, CREDIT...)
    ORDER_INFO NVARCHAR(255),                           -- Nội dung thanh toán (vnp_OrderInfo)
    PAYMENT_DATE DATETIME ,   -- Ngày giao dịch
    RESPONSE_CODE VARCHAR(10),                          -- Mã phản hồi từ VNPAY
    TMN_CODE NVARCHAR(20),                              -- Mã merchant
    PAYMENT_METHOD NVARCHAR(50),                        -- Phương thức thanh toán
    PAYMENT_RESULT INT DEFAULT 0,              -- 0: Thất bại, 1: Thành công, 2: Đang xử lý, 3: Hủy, 4: Nghi ngờ
    EMAIL NVARCHAR(100),                                -- Email người thanh toán (nếu có)
    PAYMENT_ID INT ,                            -- FK đến bảng PAYMENT
    FOREIGN KEY (PAYMENT_ID) REFERENCES PAYMENT(ID)
);

-- tạo bảng giá dịch vụ 
CREATE TABLE REGULATIONS
(
	ID INT PRIMARY KEY IDENTITY(1,1) NOT NULL, 
	SERVICE_GROUPID VARCHAR(10) NOT NULL, 
	PRICE DECIMAL(18,2) NOT NULL,        
	FOREIGN KEY(SERVICE_GROUPID) REFERENCES SERVICE_GROUP(SERVICE_GROUPID)
);
-- BẢNG ƯU ĐÃI
CREATE TABLE ENDOW
(
	ID INT PRIMARY KEY IDENTITY(1,1),
	ENDOWID VARCHAR(10) NOT NULL UNIQUE,  -- MÃ ƯU ĐÃI
	SERVICE_GROUPID VARCHAR(10) NOT NULL, -- ÁP DỤNG CHO LOẠI DỊCH VỤ NÀO
	DISCOUNT FLOAT NOT NULL,              -- % GIẢM
	STARTDATE DATETIME NULL,              -- BẮT ĐẦU ƯU ĐÃI
	ENDDATE DATETIME NULL,                -- KẾT THÚC ƯU ĐÃI
	DURATION INT NULL,                    -- SỐ THÁNG ÁP DỤNG (nếu có) CHO DẠNG HỢP ĐỒNG BAO LÂU 
	DESCRIPTIONENDOW NVARCHAR(255) NULL,       -- MÔ TẢ ƯU ĐÃI
	FOREIGN KEY(SERVICE_GROUPID) REFERENCES SERVICE_GROUP(SERVICE_GROUPID)
);

CREATE TABLE PASSWORDRESETTOKEN (
    ID INT PRIMARY KEY IDENTITY(1,1),
    EMAIL NVARCHAR(100) NOT NULL,   
    OTP NVARCHAR(10) NOT NULL,      
    EXPIRYTIME DATETIME NOT NULL,   
    ISUSED BIT NOT NULL DEFAULT 0  
);

CREATE TABLE [dbo].[CONTACT](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[Name] [nvarchar](500) NOT NULL,
	[Phone] [nvarchar](50) NOT NULL,
	[Email] [nvarchar](50) NULL,
	[Subject] [nvarchar](500) NULL,
	[Message] [nvarchar](2000) NULL,
	[Status] [int] NOT NULL,
	[CreatedDate] [datetime] NULL,
	[CompanyName] [nvarchar](500) NULL,

 CONSTRAINT [PK_CONTACT] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO

CREATE TABLE NOTIFICATIONS (
    Id INT IDENTITY(1,1) PRIMARY KEY,
    UserId INT NULL,
    Title NVARCHAR(255) NOT NULL,
    Content NVARCHAR(MAX) NOT NULL,
    Typenoti INT NOT NULL,
    ReferenceId BIGINT NULL,
    IsRead BIT NOT NULL DEFAULT 0,
    Data NVARCHAR(MAX) NULL,
    CreatedAt DATETIME NOT NULL DEFAULT GETDATE(),
    UpdatedAt DATETIME NULL
);


--ALTER TABLE CONTRACTS
--ALTER COLUMN SERVICE_TYPEID INT NULL;

--SELECT name 
--FROM sys.foreign_keys 
--WHERE parent_object_id = OBJECT_ID('CONTRACTS');

--ALTER TABLE CONTRACTS
--DROP CONSTRAINT FK__CONTRACTS__SERVI__52593CB8;

--ALTER TABLE CONTRACTS
--DROP CONSTRAINT FK__CONTRACTS__CUSTO__534D60F1;

--ALTER TABLE CONTRACTS
--ADD CONSTRAINT FK_CONTRACTS_SERVICE_TYPEID
--FOREIGN KEY (SERVICE_TYPEID) REFERENCES SERVICE_TYPE(ID)
--ON DELETE SET NULL;





--update Payment set PAYMENTSTATUS = 0 where id = 1 = 'SV0004'
--DELETE FROM CONTRACT_STATUS_HISTORY WHERE id = 48
--DELETE FROM PAYMENT_TRANSACTION WHERE PAYMENT_ID = 8

--DELETE FROM CONTRACT_STATUS_HISTORY WHERE CONTRACTNUMBER = 'SV0005'
--DELETE FROM CONTRACT_FILES WHERE CONTRACTNUMBER = 'SV0005' 
--DELETE FROM Payment WHERE CONTRACTNUMBER = 'SV0005'  
--DELETE FROM contracts WHERE CONTRACTNUMBER = 'SV0005' 

--DELETE FROM CONTRACT_STATUS_HISTORY WHERE CONTRACTNUMBER = 'SV0006'
--DELETE FROM CONTRACT_FILES WHERE CONTRACTNUMBER = 'SV0006' 
--DELETE FROM Payment WHERE CONTRACTNUMBER = 'SV0006'  
--DELETE FROM contracts WHERE CONTRACTNUMBER = 'SV0006' 

--DELETE FROM CONTRACT_STATUS_HISTORY WHERE CONTRACTNUMBER = 'SV0002'
--DELETE FROM CONTRACT_FILES WHERE CONTRACTNUMBER = 'SV0002' 

--DELETE FROM Payment WHERE CONTRACTNUMBER = 'SV0002'  
--DELETE FROM contracts WHERE CONTRACTNUMBER = 'SV0002' 

--DELETE FROM CONTRACT_STATUS_HISTORY WHERE CONTRACTNUMBER = 'SV0004'
--DELETE FROM CONTRACT_FILES WHERE CONTRACTNUMBER = 'SV0004' 
--DELETE FROM Payment WHERE CONTRACTNUMBER = 'SV0004'  
--DELETE FROM contracts WHERE CONTRACTNUMBER = 'SV0004' 

--DELETE FROM CONTRACT_STATUS_HISTORY WHERE CONTRACTNUMBER = 'SV0003'
--DELETE FROM CONTRACT_FILES WHERE CONTRACTNUMBER = 'SV0003' 
--DELETE FROM Payment WHERE CONTRACTNUMBER = 'SV0003'  
--DELETE FROM contracts WHERE CONTRACTNUMBER = 'SV0003' 

DELETE FROM CONTRACT_STATUS_HISTORY WHERE CONTRACTNUMBER = 'SV0016'
DELETE FROM CONTRACT_FILES WHERE CONTRACTNUMBER = 'SV0016' 
DELETE FROM Payment WHERE CONTRACTNUMBER = 'SV0016'  
DELETE FROM contracts WHERE CONTRACTNUMBER = 'SV0016' 

DELETE FROM Account WHERE CUSTOMERID = 'IT03030016' 
DELETE FROM company WHERE CUSTOMERID = 'IT03030016' 

--select * from staff
--select * from LOGINADMIN
--select * from REQUIREMENTS 
--select * from HISTORYREQ
--select * from ASSIGN
select * from company 
select * from Account 
select * from contracts
select * from CONTRACT_FILES
select * from CONTRACT_STATUS_HISTORY
select * from Payment
select * from PAYMENT_TRANSACTION
----select * from SERVICE_TYPE
----select * from LOGINclient
----select * from PASSWORDRESETTOKEN
----select * from endow
----select * from REGULATIONS
--select * from CONTACT
--select * from NOTIFICATIONS
--select * from REVIEW
--select * from REVIEW_CRITERIA
--select * from REVIEW_DETAIL
--select * from REQUIREMENTS 




