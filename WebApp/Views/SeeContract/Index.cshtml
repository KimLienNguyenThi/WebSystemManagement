@{
    Layout = null;
}
@{
    var fileName = Context.Request.Query["fileName"];
    var email = Context.Request.Query["email"];
    var apiDomain = "https://localhost:7190"; // Địa chỉ API
    var pdfUrl = $"{apiDomain}/signed-contracts/{fileName}";
    }
<embed id="pdfViewer" src="@pdfUrl" type="application/pdf" width="100%" height="600px" />

<br />
<!-- Chọn file chứng thư số (.pfx) -->
<input type="file" id="certInput" accept=".pfx" />
<input type="password" id="certPassword" placeholder="Mật khẩu chứng thư số" />

<button id="signBtn" class="btn btn-primary">Ký hợp đồng</button>
<button id="confirmSaveBtn" class="btn btn-success" disabled>Lưu hợp đồng đã ký</button>

<hr />
<h4>Hoặc ký bằng hình ảnh chữ ký tay (scan)</h4>
<input type="file" id="signatureImage" accept=".png,.jpg,.jpeg" />
<button id="signWithImageBtn" class="btn btn-secondary">Ký bằng chữ ký tay</button>
<!-- Modal thông báo lỗi -->
<div class="modal fade" id="ModalError" tabindex="-1" aria-labelledby="ModalErrorLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="ModalErrorLabel">Lỗi</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p id="contentModalError"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" id="btnCloseModal">Đóng</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="ModalSuccess" tabindex="-1" role="dialog" aria-labelledby="ModalSuccess" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-body text-center bg-green">
                <span id="contentModalSuccess"></span>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script type="module">
        import * as forge from 'https://cdn.jsdelivr.net/npm/node-forge@1.3.1/dist/forge.min.js';
        let signedPdfBlob = null; // Lưu trữ bản PDF ký tạm

        document.getElementById("signBtn").addEventListener("click", async () => {
            const pfxFile = document.getElementById("certInput").files[0];
            const password = document.getElementById("certPassword").value;

            if (!pfxFile || !password) {
                showError("Vui lòng chọn file chứng thư số và nhập mật khẩu");
                return;
            }

            const formData = new FormData();
            formData.append("pfxFile", pfxFile);
            formData.append("password", password);
            formData.append("fileName", "@fileName");
            formData.append("email", "@email");

            try {
                const res = await fetch("/seecontract/SignPdfWithPfx", {
                    method: "POST",
                    body: formData
                });

                if (!res.ok) throw new Error("Ký thất bại");

                signedPdfBlob = await res.blob();

                // Hiển thị PDF ký tạm trong pdfViewer
                const url = URL.createObjectURL(signedPdfBlob);
                document.getElementById("pdfViewer").src = url;
                document.getElementById("contentModalSuccess").innerHTML = "Ký hợp đồng thành công, xem hợp đồng đã ký bên trên";
                $("#ModalSuccess").modal("show");
                // Kích hoạt nút lưu hợp đồng đã ký
                document.getElementById("confirmSaveBtn").disabled = false;
            } catch (err) {
                  showError("Ký thất bại: " + err.message);
            }
        });

        // Khi client xác nhận lưu file ký đè lên file gốc
        document.getElementById("confirmSaveBtn").addEventListener("click", async () => {
            if (!signedPdfBlob) {
                showError("Chưa có hợp đồng ký tạm để lưu");
                return;
            }

            try {
                // Gửi file ký tạm lên server để lưu đè
                const formData = new FormData();
                formData.append("fileName", "@fileName");
                formData.append("signedPdf", signedPdfBlob, "signed_" + "@fileName");
                formData.append("email", "@email");

                const res = await fetch("/seecontract/SaveSignedPdf", {
                    method: "POST",
                    body: formData
                });

                if (!res.ok) throw new Error("Lưu file ký thất bại");

                document.getElementById("contentModalSuccess").innerHTML = "Lưu hợp đồng đã ký thành công!";
                $("#ModalSuccess").modal("show");
                // Vô hiệu hóa nút lưu sau khi lưu xong
                document.getElementById("confirmSaveBtn").disabled = true;
            } catch (err) {
                showError("Lưu thất bại:", err.message);
                return;
            }
        });

        function showError(message) {
            document.getElementById("contentModalError").innerText = message;

            // Khởi tạo modal bằng Bootstrap 5
            var errorModal = new bootstrap.Modal(document.getElementById("ModalError"), {
                keyboard: true, // Cho phép bấm phím ESC để đóng
                backdrop: 'static' // Không đóng modal khi bấm ngoài
            });
            // Hiển thị modal
            errorModal.show();
            // Gán sự kiện đóng modal vào nút "Đóng"
            document.getElementById("btnCloseModal").addEventListener("click", function () {
                errorModal.hide();
            });
        }
    </script>
}
