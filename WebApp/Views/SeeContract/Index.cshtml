@{
    Layout = "~/Views/Shared/_LayoutGuest.cshtml";
}

@{
    var fileName = Context.Request.Query["fileName"];
    var email = Context.Request.Query["email"];
    var apiDomain = "https://localhost:7190"; // Địa chỉ API
    var pdfUrl = $"{apiDomain}/signed-contracts/{fileName}";
    var contractNumber = Context.Request.Query["contractNumber"];
            <script src="https://cdn.jsdelivr.net/npm/signature_pad@4.1.7/dist/signature_pad.umd.min.js"></script>
}

<div class="mt-3">
    <!-- Hàng trên: Chọn loại ký -->
    <div class="row mb-3">
        <div class="col">
            <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" name="signType" id="usePfxRadio" value="pfx" checked />
                <label class="form-check-label" for="usePfxRadio">Sử dụng chứng thư số (.pfx)</label>
            </div>
            <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" name="signType" id="useImageRadio" value="image" />
                <label class="form-check-label" for="useImageRadio">Ký bằng hình ảnh chữ ký tay</label>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <div id="pfxSection">
                <!-- Chọn file chứng thư số (.pfx) -->
                <input type="file" id="certInput" accept=".pfx" />
                <input type="password" id="certPassword" placeholder="Mật khẩu chứng thư số" />
                <button id="signBtn" class="btn btn-primary">Ký hợp đồng</button>
                <button id="confirmSaveBtn" class="btn btn-success" disabled>Lưu hợp đồng đã ký</button>
            </div>
            <div id="imageSignSection" style="display: none;">
                
                <canvas id="signature-pad" width="400" height="200" style="border:1px solid #ccc"></canvas>
                <br>
                <button onclick="clearSignature()">Xóa</button>
                <button onclick="saveSignature()">Gửi chữ ký</button>
                <div id="confirmSaveSection" style="display: none; margin-top: 10px;">
                    <button class="btn btn-success" onclick="confirmSaveSignature()">Xác nhận lưu chữ ký</button>
                </div>
            </div>
        </div>        
        <div class="col-md-8">
            <embed id="pdfViewer" src="@pdfUrl" type="application/pdf" width="100%" height="600px" />
        </div>
    </div>
</div>

<div class="modal fade" id="ModalError" tabindex="-1" aria-labelledby="ModalErrorLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="ModalErrorLabel">Lỗi</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p id="contentModalError"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" id="btnCloseModal">Đóng</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="ModalSuccess" tabindex="-1" role="dialog" aria-labelledby="ModalSuccess" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-body text-center bg-green">
                <span id="contentModalSuccess"></span>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="confirmModal" tabindex="-1" aria-labelledby="xacNhanModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="xacNhanModalLabel">Xác nhận hành động</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <span class="" id="contentModalConfirm"></span>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal"> Đóng </button>
                <button type="button" class="btn btn-primary" id="confirmButton1">Xác nhận</button>
            </div>
        </div>
    </div>
</div>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

@section Scripts {
   
    <script type="module">
        import * as forge from 'https://cdn.jsdelivr.net/npm/node-forge@1.3.1/dist/forge.min.js';
        let signedPdfBlob = null; // Lưu trữ bản PDF ký tạm
        // Khi radio thay đổi, hiển thị đúng phần tương ứng
        document.querySelectorAll('input[name="signType"]').forEach((radio) => {
            radio.addEventListener('change', function () {
                const pfxSection = document.getElementById("pfxSection");
                const imageSignSection = document.getElementById("imageSignSection");

                if (this.value === "pfx") {
                    pfxSection.style.display = "block";
                    imageSignSection.style.display = "none";
                    clearSignature();
                } else {
                    pfxSection.style.display = "none";
                    imageSignSection.style.display = "block";
                    document.getElementById("certPassword").value = "";
                }
            });
        });
        
        document.getElementById("signBtn").addEventListener("click", async () => {
            const pfxFile = document.getElementById("certInput").files[0];
            const password = document.getElementById("certPassword").value;

            if (!pfxFile || !password) {
                showError("Vui lòng chọn file chứng thư số và nhập mật khẩu");
                return;
            }

            const formData = new FormData();
            formData.append("pfxFile", pfxFile);
            formData.append("password", password);
            formData.append("fileName", "@fileName");
            formData.append("email", "@email");

            // Hiển thị modal xác nhận
            document.getElementById("contentModalConfirm").innerHTML = "Bạn có chắc muốn ký với thông tin này không?";
            const modalConfirmEl = document.getElementById("confirmModal");
            const modalConfirm = new bootstrap.Modal(modalConfirmEl);
            modalConfirm.show();

            // Xử lý khi bấm nút xác nhận
            $("#confirmButton1").off("click").on("click", async function () {
                modalConfirm.hide();
                try {
                    const res = await fetch("/seecontract/SignPdfWithPfx", {
                        method: "POST",
                        body: formData
                    });

                    if (!res.ok) {
                        const errJson = await res.json();
                        throw new Error(errJson.message || "Ký thất bại");
                    }
                    signedPdfBlob = await res.blob();

                    // Hiển thị PDF ký tạm trong pdfViewer
                    const url = URL.createObjectURL(signedPdfBlob);
                    document.getElementById("pdfViewer").src = url;

                    // Hiển thị modal thành công
                    document.getElementById("contentModalSuccess").innerHTML =
                        "Ký hợp đồng thành công, xem hợp đồng đã ký bên trên";

                    // ✅ Dùng Bootstrap Modal JS thuần thay vì jQuery
                    const modal = new bootstrap.Modal(document.getElementById("ModalSuccess"));
                    modal.show();
                    document.getElementById("confirmSaveBtn").disabled = false;

                } catch (err) {
                    showError("Ký thất bại: " + err.message);
                }
            });
            
        });

        // Khi client xác nhận lưu file ký đè lên file gốc
        document.getElementById("confirmSaveBtn").addEventListener("click", async () => {
            // Hiển thị modal xác nhận
            document.getElementById("contentModalConfirm").innerHTML = "Bạn có chắc chắn muốn lưu chữ ký này và ghi đè hợp đồng gốc? Sau khi lưu sẽ không thể chỉnh sửa.";
            const modalConfirmEl = document.getElementById("confirmModal");
            const modalConfirm = new bootstrap.Modal(modalConfirmEl);
            modalConfirm.show();

            // Xử lý khi bấm nút xác nhận
            $("#confirmButton1").off("click").on("click", async function () {
                modalConfirm.hide();
                if (!signedPdfBlob) {
                    showError("Chưa có hợp đồng ký tạm để lưu");
                    return;
                }

                try {
                    // Gửi file ký tạm lên server để lưu đè
                    const formData = new FormData();
                    formData.append("fileName", "@fileName");
                    formData.append("signedPdf", signedPdfBlob, "signed_" + "@fileName");
                    formData.append("email", "@email");
                    formData.append("contractNumber", "@ViewBag.ContractNumber");

                    const res = await fetch("/seecontract/SaveSignedPdf", {
                        method: "POST",
                        body: formData
                    });

                    if (!res.ok) throw new Error("Lưu file ký thất bại");

                    document.getElementById("contentModalSuccess").innerHTML = "Lưu hợp đồng đã ký thành công!";
                    $("#ModalSuccess").modal("show");
                    // Vô hiệu hóa nút lưu sau khi lưu xong
                    document.getElementById("confirmSaveBtn").disabled = true;
                    // Chờ modal hiển thị một chút rồi chuyển trang (hoặc dùng timeout)
                    setTimeout(() => {
                        const fileName = "@fileName";
                        const email = "@email";
                        window.location.href = `/SeeContract/index?fileName=${encodeURIComponent(fileName)}&email=${encodeURIComponent(email)}`;
                    }, 1500); // 1.5 giây delay cho user thấy modal
                    document.getElementById("certPassword").value = "";

                } catch (err) {
                    showError("Lưu thất bại:", err.message);
                    return;
                }
            });
        });
        
        function showError(message) {
            document.getElementById("contentModalError").innerText = message;

            // Khởi tạo modal bằng Bootstrap 5
            var errorModal = new bootstrap.Modal(document.getElementById("ModalError"), {
                keyboard: true, // Cho phép bấm phím ESC để đóng
                backdrop: 'static' // Không đóng modal khi bấm ngoài
            });
            // Hiển thị modal
            errorModal.show();
            // Gán sự kiện đóng modal vào nút "Đóng"
            document.getElementById("btnCloseModal").addEventListener("click", function () {
                errorModal.hide();
            });
        }
        
    </script>
    <script>
        const canvas = document.getElementById('signature-pad');
        const signaturePad = new SignaturePad(canvas);

        function clearSignature() {
            signaturePad.clear();
            document.getElementById("confirmSaveSection").style.display = "none";
        }

        async function saveSignature() {
            // Hiển thị modal xác nhận
            document.getElementById("contentModalConfirm").innerHTML = "Bạn có chắc muốn ký với thông tin này không?";
            const modalConfirmEl = document.getElementById("confirmModal");
            const modalConfirm = new bootstrap.Modal(modalConfirmEl);
            modalConfirm.show();

            // Xử lý khi bấm nút xác nhận
            $("#confirmButton1").off("click").on("click", async function () {
                modalConfirm.hide();
                if (signaturePad.isEmpty()) {
                    showError("Vui lòng ký tên trước");
                    return;
                }
                const dataURL = signaturePad.toDataURL();
                //document.getElementById('signature-image').src = dataURL;

                const formData = new FormData();
                formData.append("base64Hand", dataURL);
                formData.append("fileName", "@fileName");
                formData.append("email", "@email");

                // Gửi chữ ký lên server
                const response = await fetch('/seecontract/SignPdfWithHand', {
                    method: 'POST',
                    body: formData
                });

                //const result = await response.text();
                signedPdfBlob = await response.blob();
                if (!response.ok) {
                    showError("Ký bằng chữ ký tay thất bại.");
                    return;
                }
                // Hiển thị PDF ký tạm trong pdfViewer
                const url = URL.createObjectURL(signedPdfBlob);
                document.getElementById("pdfViewer").src = url;

                // Hiển thị modal thành công
                document.getElementById("contentModalSuccess").innerHTML =
                    "Ký hợp đồng thành công, xem hợp đồng đã ký bên trên";
                // ✅ Dùng Bootstrap Modal JS thuần thay vì jQuery
                const modal = new bootstrap.Modal(document.getElementById("ModalSuccess"));
                modal.show();
                document.getElementById("confirmSaveSection").style.display = "block";
            });
        }

        async function confirmSaveSignature() {
            // Hiển thị modal xác nhận
            document.getElementById("contentModalConfirm").innerHTML = "Bạn có chắc muốn ký với thông tin này không?";
            const modalConfirmEl = document.getElementById("confirmModal");
            const modalConfirm = new bootstrap.Modal(modalConfirmEl);
            modalConfirm.show();

            // Xử lý khi bấm nút xác nhận
            $("#confirmButton1").off("click").on("click", async function () {
                modalConfirm.hide();
                // Gửi file ký tạm lên server để lưu đè
                const formData = new FormData();
                formData.append("fileName", "@fileName");
                formData.append("signedPdf", signedPdfBlob, "signed_" + "@fileName");
                formData.append("email", "@email");
                formData.append("contractNumber", "@ViewBag.ContractNumber");

                const response = await fetch('/seecontract/SaveSignedPdf', {
                    method: 'POST',
                    body: formData
                });

                if (response.ok) {
                    document.getElementById("contentModalSuccess").innerHTML = "Hợp đồng đã được lưu chính thức với chữ ký.";
                    $("#ModalSuccess").modal("show");
                    // Chờ modal hiển thị một chút rồi chuyển trang (hoặc dùng timeout)

                    setTimeout(() => {
                        const fileName = "@fileName";
                        const email = "@email";
                        window.location.href = `/SeeContract/index?fileName=${encodeURIComponent(fileName)}&email=${encodeURIComponent(email)}`;
                    }, 1500); // 1.5 giây delay cho user thấy modal
                    // Ẩn nút xác nhận sau khi lưu
                    document.getElementById("confirmSaveSection").style.display = "none";
                    clearSignature();

                } else {
                    showError("Đã có lỗi khi lưu hợp đồng.");
                }
            });
        }
        function showError(message) {
            document.getElementById("contentModalError").innerText = message;

            // Khởi tạo modal bằng Bootstrap 5
            var errorModal = new bootstrap.Modal(document.getElementById("ModalError"), {
                keyboard: true, // Cho phép bấm phím ESC để đóng
                backdrop: 'static' // Không đóng modal khi bấm ngoài
            });
            // Hiển thị modal
            errorModal.show();
            // Gán sự kiện đóng modal vào nút "Đóng"
            document.getElementById("btnCloseModal").addEventListener("click", function () {
                errorModal.hide();
            });
        }
    </script>
 }
