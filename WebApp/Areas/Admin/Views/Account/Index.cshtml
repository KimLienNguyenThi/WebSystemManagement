@{
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<style>
    .hidden {
        display: none !important;
    }

    .flex-shrink-0 {
        height: 60px;
    }
    /* Căn chỉnh toàn bảng */
    #listCompany {
        margin-top: 0 !important; /* Giảm lề trên */
        padding-top: 0 !important;
        border-collapse: collapse; /* Gộp đường viền cho gọn */
        font-size: 14px; /* Cỡ chữ hợp lý */
        line-height: 1.4; /* Giảm chiều cao dòng */
    }

        /* Đảm bảo mỗi ô có độ rộng hợp lý và sát nhau hơn */
        #listCompany th, #listCompany td {
            padding: 4px 8px; /* Ít padding hơn */
            text-align: left;
            vertical-align: middle; /* Căn giữa theo chiều dọc */
            border: 1px solid #e3e3e3;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            word-wrap: break-word; /* Cho phép bẻ dòng trong các ô dài mà không bị tràn */
        }
        /* Cải thiện giao diện bảng khi có nội dung dài */
        #listCompany tbody tr {
            word-wrap: break-word; /* Cho phép bẻ dòng trong các ô dài */
        }

            #listCompany tbody tr:hover {
                background-color: #f9f9f9;
                cursor: pointer;
            }
        /* Giảm khoảng cách giữa dòng tiêu đề và các hàng dữ liệu */
        #listCompany th {
            padding-top: 3px; /* Giảm khoảng cách trên tiêu đề */
            padding-bottom: 3px; /* Giảm khoảng cách dưới tiêu đề */
            text-align: center; /* Căn giữa văn bản tiêu đề */
            background-color: #f1f1f1; /* Đặt màu nền cho tiêu đề */
            font-weight: bold; /* Làm đậm các tiêu đề */
        }

        /* Các phần tử trong bảng có thể điều chỉnh theo nhu cầu */
        #listCompany td {
            font-size: 14px;
        }

        /* Thêm hiệu ứng hover cho các hàng trong bảng */
        #listCompany tbody tr:hover {
            background-color: #e7e7e7;
            cursor: pointer;
        }

        /* Đảm bảo không bị tràn khi có văn bản dài */
        #listCompany td {
            text-overflow: ellipsis;
            overflow: hidden;
            white-space: nowrap;
        }

    .card-body {
        padding-top: 5px;
    }

    .switch {
        position: relative;
        display: inline-block;
        width: 60px;
        height: 30px;
    }

        .switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }

    .slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #ccc;
        transition: 0.4s;
        border-radius: 30px;
    }

        .slider:before {
            position: absolute;
            content: "";
            height: 24px;
            width: 24px;
            left: 3px;
            bottom: 3px;
            background-color: white;
            transition: 0.4s;
            border-radius: 50%;
        }

    input:checked + .slider {
        background-color: #4CAF50;
    }

        input:checked + .slider:before {
            transform: translateX(30px);
        }

    /* Thêm chữ ON / OFF */
    .toggle-text {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        font-size: 13px;
        font-weight: bold;
        color: white;
        transition: 0.4s;
    }

        /* Chữ ON bên trái, OFF bên phải */
        .toggle-text.on {
            left: 10px;
        }

        .toggle-text.off {
            right: 10px;
        }

    /* Khi OFF: Hiển thị OFF, ẩn ON */
    input:not(:checked) + .slider .toggle-text.on {
        display: none;
    }

    /* Khi ON: Hiển thị ON, ẩn OFF */
    input:checked + .slider .toggle-text.off {
        display: none;
    }

    .p-3 {
        padding-left: 1rem !important;
        padding-right: 1rem !important;
        padding-top: 0px;
    }
</style>
<body>
    <div id="companyListContainer" class="container-fluid d-flex flex-column vh-100">
        <!-- Mục lọc -->
        <div class="row flex-shrink-0">
            <div class="col-12">
                <div class="card p-2">
                    <form class="d-flex align-items-center w-100" style="gap: 10px;">
                        <input type="text" class="form-control form-control-sm w-25" style="min-width: 170px; padding: 5px;" placeholder="Mã khách hàng/Tên công ty/MST/Tài khoản root">
                        <select class="form-select form-select-sm" style="padding: 5px;">
                            <option selected>Tất cả</option>
                            <option>Vip</option>
                            <option>Bình thường</option>
                        </select>

                        <button id="searchBtn" class="btn btn-primary btn-sm flex-grow-1 px-3" style="padding: 5px; margin-right: 10px;">🔍 Tìm kiếm</button>
                        <button class="btn btn-warning btn-sm flex-grow-1 px-3" style="padding: 5px; margin-right: 10px;" onclick=" exportToCsv(event)">📥 Xuất Excel</button>
                        <button class="btn btn-success btn-sm flex-grow-1 px-3" style="padding: 5px; margin-right: 10px;" onclick="refresh()">➕ Làm mới</button>
                        <button id="createAccountBtn" class="btn btn-danger btn-sm flex-grow-1 px-3" style="padding: 5px;">👤 Tạo tài khoản</button>

                        <button id="pendingContractsBtn" class="btn btn-outline-secondary btn-sm flex-grow-1 px-3" type="button" style="padding: 5px;">
                            ⏳ Chờ duyệt
                        </button>

                    </form>
                </div>
            </div>
        </div>

        <!-- Mục hiển thị danh sách -->
        <div class="row flex-grow-1 overflow-auto">
            <div class="col-12">
                <div class="card p-3 h-100">
                    <div class="table-responsive h-100">
                        <table id="listCompany" class="table table-striped table-bordered">
                            <thead class="table-light">
                                <tr>
                                    <th>STT</th>
                                    <th>Mã khách hàng</th>
                                    <th>Tên công ty</th>
                                    <th>Mã số thuế</th>
                                    <th>Tài khoản root</th>
                                    <th>Ngày cấp tài khoản</th>
                                    <th>Trạng thái</th>
                                    <th>Update</th>
                                </tr>
                            </thead>
                            <tbody>
                                <!-- Thêm các dòng khác tương tự -->
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @* TẠO *@
    <div id="createAccountContainer" class="container-fluid d-flex flex-column vh-100" style="display: none;">
        <div class="row flex-shrink-0">
            <div class="col-12">
                <div class="card p-2">
                    <form class="d-flex align-items-center w-100" style="gap: 10px;">

                        <button id="backBtn" class="btn btn-secondary btn-sm px-3">
                            🔙 Quay lại
                        </button> 
                    </form>

                </div>
            </div>
        </div>

        <div class="row flex-grow-1 overflow-auto">
            <!-- Form bên trái -->
            <div class="col-md-6">
                <div class="card-body">
                    <h5>THÔNG TIN CÔNG TY</h5>
                    <form>
                        <div class="form-group d-flex align-items-center">
                            <label class="w-25">Tên công ty: <span class="text-danger">*</span></label>
                            <input type="text" class="form-control w-75" id="cName">
                        </div>
                        <div class="form-group d-flex align-items-center">
                            <label class="w-25">Mã khách hàng:</label>
                            <input type="text" class="form-control w-75" id="cId" readonly>
                        </div>
                        <div class="form-group d-flex align-items-center">
                            <label class="w-25">Mã số thuế: <span class="text-danger">*</span></label>
                            <input type="text" class="form-control w-75" id="cTaxCode">
                        </div>
                        <div class="form-group d-flex align-items-center">
                            <label class="w-25">Email: <span class="text-danger">*</span></label>
                            <input type="email" class="form-control w-75" id="cEmail" pattern="@(@"[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}")" required>
                        </div>
                        <div class="form-group d-flex align-items-center">
                            <label class="w-25">Số điện thoại: <span class="text-danger">*</span></label>
                            <input type="text" class="form-control w-75 phone-input" id="cPhone" maxlength="10">
                        </div>
                        <div class="form-group d-flex align-items-center">
                            <label class="w-25">Địa chỉ: <span class="text-danger">*</span></label>
                            <input type="text" class="form-control w-75" id="cAddress">
                        </div>
                        <div class="form-group d-flex align-items-center">
                            <label class="w-25">Phân loại:</label>
                            <select class="form-control w-75" id="cType" name="cType">
                                <option value="normal">Bình thường</option>
                                <option value="vip">VIP</option>
                            </select>
                        </div>
                        <div class="form-group d-flex align-items-center">
                            <label class="w-25">Số hợp đồng: <span class="text-danger">*</span></label>
                            <input type="text" class="form-control w-75" id="ContractNumber" readonly>
                        </div>

                        <div class="form-group d-flex align-items-center">
                            <label class="w-25">Loại dịch vụ:</label>
                            <select class="form-control w-75" id="serviceType">
                            </select>
                        </div>

                        <div class="form-group d-flex align-items-center">
                            <label class="w-25">Trạng thái:</label>
                            <select class="form-control w-75" id="aStatus" disabled>
                                <option value="1">Hoạt động</option>
                                <option value="0">Không hoạt động</option>
                            </select>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Form bên phải -->
            <div class="col-md-6">
                <div class="card-body">
                    <h5>THÔNG TIN TÀI KHOẢN</h5>
                    <form>

                        <div class="form-group d-flex align-items-center">
                            <label class="w-25">Email: <span class="text-danger">*</span></label>
                            <input type="email" class="form-control w-75" id="aEmail">
                        </div>
                        <div class="form-group d-flex align-items-center">
                            <label class="w-25">Họ và tên: <span class="text-danger">*</span></label>
                            <input type="text" class="form-control w-75" id="aName">
                        </div>
                        <div class="form-group d-flex align-items-center">
                            <label class="w-25">Số điện thoại: <span class="text-danger">*</span></label>
                            <input type="text" class="form-control w-75 phone-input" id="aPhone" maxlength="10">
                        </div>


                        <div class="form-group d-flex align-items-center">
                            <label class="w-25">Ngày sinh:</label>
                            <input type="date" class="form-control w-75" id="aDate">
                        </div>
                        <div class="form-group d-flex align-items-center">
                            <label class="w-25">Giới tính:</label>
                            <select class="form-control w-75" id="aGender" name="aGender">
                                <option value="nam">Nam</option>
                                <option value="nu">Nữ</option>
                            </select>
                        </div>

                        <div class="form-group d-flex align-items-center">
                            <label class="w-25">Ngày bắt đầu:</label>
                            <input type="date" class="form-control w-75" id="startDate" readonly>
                        </div>
                        <div class="form-group d-flex align-items-center">
                            <label class="w-25">Ngày kết thúc:</label>
                            <input type="date" class="form-control w-75" id="endDate" readonly>
                        </div>
                        <div class="form-group d-flex align-items-center">
                            <label class="w-25">Thời hạn hợp đồng:</label>
                            <select id="timeGiahan">
                                <option value="">Vui lòng chọn thời gian</option>
                                <option value="1month">1 tháng</option>
                                <option value="2month">2 tháng</option>
                                <option value="3month">3 tháng</option>
                                <option value="4month">4 tháng</option>
                                <option value="5month">5 tháng</option>
                                <option value="6month">6 tháng</option>
                                <option value="7month">7 tháng</option>
                                <option value="8month">8 tháng</option>
                                <option value="9month">9 tháng</option>
                                <option value="10month">10 tháng</option>
                                <option value="11month">11 tháng</option>
                                <option value="12month">12 tháng</option>
                                <option value="13month">13 tháng</option>
                                <option value="14month">14 tháng</option>
                                <option value="15month">15 tháng</option>
                                <option value="16month">16 tháng</option>
                                <option value="17month">17 tháng</option>
                                <option value="18month">18 tháng</option>
                            </select>
                        </div>
                        <div class="form-group d-flex align-items-center">
                            <label class="w-25">Tổng tiền:</label>
                            <input type="text" class="form-control w-75" id="amount" readonly>
                        </div>
                    </form>
                    <button id="createAccount" class="btn btn-danger btn-sm px-3" onclick="SaveAccount()">Lưu tài khoản</button>
                </div>
            </div>
        </div>
    </div>
    @* UPDATE *@
    <div id="updateAccountContainer" class="container-fluid d-flex flex-column vh-100" style="display: none;">
        <div class="row flex-shrink-0">
            <div class="col-12">
                <div class="card p-2">
                    <form class="d-flex align-items-center w-100" style="gap: 10px;">

                        <button id="backBtn2" class="btn btn-secondary btn-sm px-3">
                            🔙 Quay lại
                        </button>
                    </form>

                </div>
            </div>
        </div>

        <div class="row flex-grow-1 overflow-auto">
            <!-- Form bên trái -->
            <div class="col-md-6">
                <div class="card-body">
                    <h5>THÔNG TIN CÔNG TY</h5>
                    <form>
                        <div class="form-group d-flex align-items-center">
                            <label class="w-25">Tên công ty: <span class="text-danger">*</span></label>
                            <input type="text" class="form-control w-75" id="cName2">
                        </div>
                        <div class="form-group d-flex align-items-center">
                            <label class="w-25">Mã khách hàng:</label>
                            <input type="text" class="form-control w-75" id="cId2" readonly>
                        </div>
                        <div class="form-group d-flex align-items-center">
                            <label class="w-25">Mã số thuế: <span class="text-danger">*</span></label>
                            <input type="text" class="form-control w-75" id="cTaxCode2">
                        </div>
                        <div class="form-group d-flex align-items-center">
                            <label class="w-25">Email: <span class="text-danger">*</span></label>
                            <input type="email" class="form-control w-75" id="cEmail2" pattern="@(@"[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}")" required>
                        </div>
                        <div class="form-group d-flex align-items-center">
                            <label class="w-25">Số điện thoại: <span class="text-danger">*</span></label>
                            <input type="text" class="form-control w-75 phone-input" id="cPhone2" maxlength="10">
                        </div>
                        <div class="form-group d-flex align-items-center">
                            <label class="w-25">Địa chỉ: <span class="text-danger">*</span></label>
                            <input type="text" class="form-control w-75" id="cAddress2">
                        </div>
                        <div class="form-group d-flex align-items-center">
                            <label class="w-25">Phân loại:</label>
                            <select class="form-control w-75" id="cType2" name="cType2" disabled>
                                <option value="normal">Bình thường</option>
                                <option value="vip">VIP</option>
                            </select>
                        </div>
                        <div class="form-group d-flex align-items-center">
                            <label class="w-25">Ngày tạo TK:</label>
                            <input type="date" class="form-control w-75" id="accountIssuedDate" readonly>
                        </div>

                    </form>
                </div>
            </div>

            <!-- Form bên phải -->
            <div class="col-md-6">
                <div class="card-body">
                    <h5>THÔNG TIN TÀI KHOẢN</h5>
                    <form>
                        <div class="form-group d-flex align-items-center">
                            <label class="w-25">Username:</label>
                            <input type="text" class="form-control w-75" id="aNameID2" readonly>
                        </div>
                        <div class="form-group d-flex align-items-center">
                            <label class="w-25">Email: <span class="text-danger">*</span></label>
                            <input type="email" class="form-control w-75" id="aEmail2">
                        </div>
                        <div class="form-group d-flex align-items-center">
                            <label class="w-25">Họ và tên: <span class="text-danger">*</span></label>
                            <input type="text" class="form-control w-75" id="aName2">
                        </div>
                        <div class="form-group d-flex align-items-center">
                            <label class="w-25">Số điện thoại: <span class="text-danger">*</span></label>
                            <input type="text" class="form-control w-75 phone-input" id="aPhone2" maxlength="10">
                        </div>
                        <div class="form-group d-flex align-items-center">
                            <label class="w-25">Ngày sinh:</label>
                            <input type="date" class="form-control w-75" id="aDate2">
                        </div>
                        <div class="form-group d-flex align-items-center">
                            <label class="w-25">Giới tính:</label>
                            <select class="form-control w-75" id="aGender2" name="aGender2">
                                <option value="nam">Nam</option>
                                <option value="nu">Nữ</option>
                            </select>
                        </div>
                        <div class="form-group d-flex align-items-center">
                            <label class="w-25">Trạng thái:</label>
                            <select class="form-control w-75" id="aStatus2" disabled>
                                <option value="1">Hoạt động</option>
                                <option value="0">Không hoạt động</option>
                            </select>
                        </div>


                    </form>
                    <button id="createAccount" class="btn btn-danger btn-sm px-3" onclick="SaveAccount()">Lưu tài khoản</button>
                </div>
            </div>
        </div>
    </div>
    @* CHỜ DUYỆT *@
    <div id="pendingContractsSection" class="container-fluid d-flex flex-column vh-100" style="display: none;">
        <div class="row flex-shrink-0">
            <div class="col-12">
                <div class="card p-2">
                    <form class="d-flex align-items-center w-100" style="gap: 10px;">

                        <button id="backBtn3" class="btn btn-secondary btn-sm px-3">
                            🔙 Quay lại
                        </button>
                    </form>

                </div>
            </div>
        </div>
        
        <div class="row flex-grow-1 overflow-auto">
            <div class="col-12">
                <div class="card-body">
                    <h5>Danh sách hợp đồng chờ duyệt</h5>
        
                    <table id="pendingContracts" class="table table-bordered">
                        <thead class="table-light">
                            <tr>
                                <th>STT</th>
                                <th>Mã hợp đồng</th>
                                <th>Tên công ty</th>
                                <th>File đã ký</th>
                                <th>Hành động</th>
                            </tr>
                        </thead>
                        <tbody>
                            <!-- Dữ liệu hợp đồng chờ duyệt sẽ render ở đây -->
                        </tbody>
                    </table>

                    <!-- iframe hiển thị PDF -->
                    <div id="pdfViewer" class="hidden mt-3">
                        <iframe src="" width="100%" height="600px" style="border:none;"></iframe>

                        <div class="mt-2">
                            <button id="btnSignContract" class="btn btn-success hidden">
                                ✍️ Ký hợp đồng
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>

<!-- Modal confirm -->
<div class="modal fade" id="confirmModal" tabindex="-1" aria-labelledby="xacNhanModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="xacNhanModalLabel">Xác nhận hành động</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <span class="" id="contentModalConfirm"></span>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal"> Đóng </button>
                <button type="button" class="btn btn-primary" id="confirmButton1">Xác nhận</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal success-->
<div class="modal fade" id="ModalSuccess" tabindex="-1" role="dialog" aria-labelledby="ModalSuccess" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-body text-center bg-green">
                <span id="contentModalSuccess"></span>
            </div>
        </div>
    </div>
</div>

<!-- Modal thông báo lỗi -->
<div class="modal fade" id="ModalError" tabindex="-1" aria-labelledby="ModalErrorLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="ModalErrorLabel">Lỗi</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p id="contentModalError"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" id="btnCloseModal">Đóng</button>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    let signedStateMap = {};
    var Department = "@User.FindFirst("Department")?.Value";
    var StaffId = "@User.FindFirst("StaffId")?.Value";

    const tokenJWT = localStorage.getItem("accessToken");
    document.addEventListener("DOMContentLoaded", function () {
        const startDateInput = document.getElementById("startDate");
        const endDateInput = document.getElementById("endDate");
        const timeGiahanSelect = document.getElementById("timeGiahan");

        timeGiahanSelect.addEventListener("change", function () {
            const value = this.value;
            if (!value) {
                //alert("Vui lòng chọn thời gian gia hạn!");
                showError("Vui lòng chọn thời gian gia hạn!");
                return;
            }

            const monthsToAdd = parseInt(value.replace("month", ""));
            const today = new Date();

            // Set ngày bắt đầu = hôm nay
            const newStartDate = today;

            // Tính ngày kết thúc = hôm nay + số tháng
            const newEndDate = new Date(today);
            newEndDate.setMonth(newEndDate.getMonth() + monthsToAdd);

            // Cập nhật lên input
            startDateInput.value = formatDate(newStartDate);
            endDateInput.value = formatDate(newEndDate);
        });

        function formatDate(date) {
            const year = date.getFullYear();
            const month = String(date.getMonth() + 1).padStart(2, '0');
            const day = String(date.getDate()).padStart(2, '0');
            return `${year}-${month}-${day}`;
        }
    });

    document.querySelectorAll(".phone-input").forEach(function (input) {
        input.addEventListener("input", function (e) {
            let value = e.target.value;

            // Chỉ giữ lại số (loại bỏ ký tự không phải số)
            value = value.replace(/\D/g, "");

            // Giới hạn tối đa 10 số
            if (value.length > 10) {
                value = value.slice(0, 10);
            }

            e.target.value = value;
        });
    });

    document.getElementById("cTaxCode").addEventListener("input", function () {
        let value = this.value.replace(/[^a-zA-Z0-9]/g, ""); // Chỉ giữ lại chữ và số, loại bỏ kí tự đặc biệt

        if (value.length > 9) {
            value = value.substring(0, 9); // Giới hạn tối đa 9 kí tự
        }

        this.value = value;

        // Hiển thị viền đỏ nếu không đủ 9 kí tự
        if (value.length !== 9) {
            this.style.border = "2px solid red";
        } else {
            this.style.border = "1px solid #ced4da";
        }
    });

    document.getElementById("ContractNumber").addEventListener("input", function () {
        let value = this.value.replace(/[^a-zA-Z0-9]/g, ""); // Chỉ giữ lại chữ và số, loại bỏ kí tự đặc biệt

        if (value.length > 10) {
            value = value.substring(0, 10); // Giới hạn tối đa 10 kí tự
        }

        this.value = value;

        // Hiển thị viền đỏ nếu không đủ 9 kí tự
        if (value.length !== 10) {
            this.style.border = "2px solid red";
        } else {
            this.style.border = "1px solid #ced4da";
        }
    });

    document.addEventListener("DOMContentLoaded", function () {
        console.log("DOM đã tải xong!");

        const companyListContainer = document.getElementById("companyListContainer");
        const createAccountContainer = document.getElementById("createAccountContainer");
        const updateAccountContainer = document.getElementById("updateAccountContainer");
        const pendingContractsContainer = document.getElementById("pendingContractsSection");

        const createAccountBtn = document.getElementById("createAccountBtn");
        const pendingContractsBtn = document.getElementById("pendingContractsBtn");

        const backBtn = document.getElementById("backBtn");
        const backBtn2 = document.getElementById("backBtn2");
        const backBtn3 = document.getElementById("backBtn3");


        console.log("companyListContainer:", companyListContainer);
        console.log("createAccountContainer:", createAccountContainer);
        console.log("updateAccountContainer:", updateAccountContainer);
        console.log("pendingContractsContainer:", pendingContractsContainer);

        console.log("createAccountBtn:", createAccountBtn);
        console.log("pendingContractsBtn:", pendingContractsBtn);

        console.log("backBtn:", backBtn);
        console.log("backBtn2:", backBtn2);
        console.log("backBtn3:", backBtn3);


        // Ẩn form tạo tài khoản mặc định
        createAccountContainer.classList.add("hidden");
        updateAccountContainer.classList.add("hidden");
        pendingContractsContainer.classList.add("hidden");

        // Khi click "Tạo tài khoản"
        createAccountBtn.addEventListener("click", function (event) {
            event.preventDefault(); // Ngăn chặn load lại trang nếu là <button>
            console.log("Nhấn Tạo tài khoản!");

            // Ẩn các form khác và hiển thị form tạo tài khoản
            companyListContainer.classList.add("hidden");
            createAccountContainer.classList.remove("hidden");
            updateAccountContainer.classList.add("hidden");
            pendingContractsContainer.classList.add("hidden");


            $.ajax({
                url: `/admin/account/GetListServiceID`, // Thay URL này bằng URL thật trong backend
                headers: {
                    "Authorization": "Bearer " + tokenJWT  // Thêm token JWT nếu cần thiết
                },
                type: "GET",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    console.log("Kết quả list dịch vụ dropdown", data);
                    const select = $('#serviceType'); // sửa ID cho đúng

                    select.empty().append('<option value="">-- Chọn --</option>');

                    data.listRegu.forEach(function (item) {
                        select.append(`<option value="${item.serviceGroupid}" data-price="${item.price}">${item.serviceTypeNames}</option>`);
                    });

                    select.change(function () {
                        const selectedOption = $(this).find("option:selected");
                        const price = selectedOption.data("price");
                        const totalPriceElement = $('#totalPrice');

                        if (price) {
                            totalPriceElement.text(`Tổng tiền: ${price} VNĐ`);
                        } else {
                            totalPriceElement.text('Tổng tiền: 0 VNĐ');
                        }
                    });

                },
                error: function () {
                    showError("Không lấy được danh sách loại dịch vụ!");
                   // alert('Không lấy được danh sách loại dịch vụ!');
                }
            });


            refresh(); // Nếu có cần làm mới giao diện
        });

        // Khi click "Quay lại"
        backBtn.addEventListener("click", function (event) {
            event.preventDefault();
            console.log("Nhấn Quay lại!");
            companyListContainer.classList.remove("hidden");
            createAccountContainer.classList.add("hidden");
            updateAccountContainer.classList.add("hidden");
            pendingContractsContainer.classList.add("hidden");

            init("", "Tất cả");

        });

        backBtn2.addEventListener("click", function (event) {
            event.preventDefault();
            console.log("Nhấn Quay lại!");
            companyListContainer.classList.remove("hidden");
            createAccountContainer.classList.add("hidden");
            updateAccountContainer.classList.add("hidden");
            pendingContractsContainer.classList.add("hidden");

            init("", "Tất cả");
        });

        backBtn3.addEventListener("click", function (event) {
            event.preventDefault();
            console.log("Nhấn Quay lại!");
            companyListContainer.classList.remove("hidden");
            createAccountContainer.classList.add("hidden");
            updateAccountContainer.classList.add("hidden");
            pendingContractsContainer.classList.add("hidden");

            init("", "Tất cả");
        });

        // Thêm sự kiện cho nút "Cập nhật"
        document.addEventListener("click", function (event) {
            if (event.target.classList.contains("update-btn")) {
                event.preventDefault();
                const customerId = event.target.getAttribute("data-id");
                console.log("Nhấn Cập nhật! Customer ID:", customerId);

                // Ẩn danh sách công ty, hiển thị form cập nhật
                companyListContainer.classList.add("hidden");
                createAccountContainer.classList.add("hidden");
                updateAccountContainer.classList.remove("hidden");
                pendingContractsContainer.classList.add("hidden");

                //refresh();
            }
        });
    
        // Khi click "Chờ duyệt"
        pendingContractsBtn.addEventListener("click", function (event) {
            event.preventDefault(); // Ngăn chặn load lại trang nếu là <button>
            console.log("Nhấn hợp đồng chờ duyệt!");

            // Ẩn các form khác và hiển thị form tạo tài khoản
            companyListContainer.classList.add("hidden");
            createAccountContainer.classList.add("hidden");
            updateAccountContainer.classList.add("hidden");
            pendingContractsContainer.classList.remove("hidden");

            if ($.fn.DataTable.isDataTable("#pendingContracts")) {
                $("#pendingContracts").DataTable().destroy(); // Xóa DataTable cũ trước khi tạo lại
            }

            var table = $('#pendingContracts').DataTable({
                processing: true,
                serverSide: true,
                paging: true,
                searching: false,
                searchDelay: 400,
                // scrollY: false,
                iDisplayLength: 7,
                bLengthChange: false,
                language: {
                    info: "Hiển thị _START_ đến _END_ của _TOTAL_ tài khoản",
                    lengthMenu: "Hiển thị _MENU_  tài khoản",
                    //search: "Tìm kiếm",
                    processing: "Đang tải dữ liệu...",
                    paginate: {
                        previous: "Trước",
                        next: "Tiếp theo",
                        last: "Cuối"
                    }
                },

                ajax: {
                    url: "/admin/account/GetListPending",
                    type: "POST",
                    headers: {
                        "Authorization": "Bearer " + tokenJWT
                    },
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    beforeSend: function () {
                        // Optional: Show loading indicator
                    },
                    data: function (data) {
                        var pendingContractsA = $("#pendingContracts").DataTable();
                        var settings = pendingContractsA.settings();
                        var currentPageIndex = Math.ceil(settings[0]._iDisplayStart / settings[0]._iDisplayLength) + 1;

                        return JSON.stringify({
                            PageSize: 7,
                            Page: currentPageIndex,
                            Keyword: "", // Lấy giá trị từ input tìm kiếm
                            Category: ""
                        });
                    },
                    dataSrc: function (res) {
                        signedStateMap = {}; // Reset map trạng thái
                        console.log("Ket qua hop dong cho duyet",res.pendingContracts);

                        if (res.success && res.pendingContracts.results) {
                            res.pendingContracts.results.forEach(contract => {
                                const key = contract.contractNumber.toLowerCase(); // dùng lowercase để tránh sai sót
                                //const status = contract.constatus.trim().toLowerCase();
                                //signedStateMap[key] = (status === "ký hoàn tất") ? 1 : 0;
                                const status = contract.constatus;
                              //  signedStateMap[key] = (status === "Đã ký") ? 1 : 0;
                                signedStateMap[key] = (status ==1 ) ? 1 : 0;

                            });
                            return res.pendingContracts.results;
                        }

                        return [];
                    },
                    dataFilter: function (data) {
                        var page = $.parseJSON(data);
                        if (!page.success || !page.pendingContracts) {
                            page.recordsTotal = 0;
                            page.recordsFiltered = 0;
                            return JSON.stringify(page);
                        }
                        page.recordsTotal = page.pendingContracts.rowCount || 0;
                        page.recordsFiltered = page.pendingContracts.rowCount || 0;
                        return JSON.stringify(page);
                    },
                    error: function (xhr, status, error) {
                        console.error("Lỗi khi lấy dữ liệu:", error);
                        // alert("Không thể tải danh sách công ty. Vui lòng thử lại!");
                        showError("Không thể tải danh sách công ty. Vui lòng thử lại!");

                    }
                },
                columns: [
                    {
                        data: null,
                        width: "5%",
                        render: function (data, type, row, meta) {
                            return meta.row + 1;
                        }
                    },
                    { data: "contractNumber", width: "20%" },
                    { data: "companyName", width: "25%" },
                    {
                        data: "confileName",
                        width: "25%",
                        render: function (data, type, row) {
                            if (!data) return "<span class='text-muted'>Chưa có file</span>";

                            const fileName = data.split('/').pop();
                            //const folder = row.constatus === "Chưa ký" ? "temp-pdfs" : "signed-contracts";
                            const folder = row.constatus ==0 ? "temp-pdfs" : "signed-contracts";

                            return `
                            <a href="/temp-pdfs/${fileName}"
                               target="_blank"
                               class="pdf-link"
                               data-id="${row.contractNumber}"
                               data-confilename="${fileName}"
                               data-realpath="${row.filePath}"
                               data-folder="${folder}">
                                <i class="fa-solid fa-file-pdf text-danger" style="font-size: 1.3rem;"></i>Xem hợp đồng
                            </a>`;
                        }
                    },
                    {
                        data: "constatus",
                        width: "25%",
                        render: function (data, type, row) {
                            const contractNumber = row.contractNumber;
                            const normalizedStatus = row.constatus;

                            //if (normalizedStatus === "Chưa ký") {
                            if (normalizedStatus ==0) {
                                return `<span class="text-muted">Chờ người phụ trách ký</span>`;
                            }
                                
                           // if (normalizedStatus === "Đã ký") {
                            if (normalizedStatus ==1 ) {
                                return `
                                <div class="d-flex justify-content-center gap-2">
                                    <button class="btn btn-sm btn-primary btn-send-client"
                                            title="Gửi mail cho khách ký"
                                            data-contractnumber="${contractNumber}"
                                                data-confilename="${row.confileName}"
                                                data-filepath="${row.filePath}">
                                        <i class="fa-solid fa-paper-plane"></i> Gửi khách ký
                                    </button>
                                </div>`;
                            } 
                            //if (normalizedStatus === "Chờ client ký") {
                            if (normalizedStatus ==2) {
                                return `<span class="text-muted">Chờ khách hàng ký</span>`;
                            }
                            //if (normalizedStatus === "Ký hoàn tất") {
                            if (normalizedStatus ==3) {
                                return `<span class="text-muted">Chờ thanh toán</span>`;
                            }
                            //if (normalizedStatus === "Đã thanh toán") {
                            if (normalizedStatus ==4) {
                                const fileName = row.confileName;
                                const folder = "signed-contracts"; // vì đã ký và chờ duyệt
                                const realPath = `/${folder}/${fileName}`;
                                return `
                                    <div class="d-flex justify-content-center gap-2">
                                        <button class="btn btn-sm btn-success btn-approve"
                                                title="Duyệt hợp đồng"
                                                data-contractnumber="${contractNumber}"
                                                data-confilename="${fileName}"
                                                data-filepath="${realPath}">
                                            <i class="fa-solid fa-circle-check"></i> Duyệt hợp đồng
                                        </button>
                                    </div>`;
                            }
                            return `<span class="text-muted">Chưa ký</span>`;
                        }
                    }
                ],

                createdRow: function (row, data, dataIndex) {
                    $(row).data("fullData", data); // Lưu toàn bộ dữ liệu vào row
                },

                columnDefs: [{
                    "defaultContent": "-",
                    "targets": "_all"
                }]
            });

        });
    });

    //xem hợp đồng
    $('#pendingContracts').on('click', '.pdf-link', function (e) {
        e.preventDefault();

        const $link = $(e.target).closest('.pdf-link'); // lấy thẻ <a>
        const contractNumber = $link.attr('data-id');
        const confileName = $link.attr('data-confilename'); // dùng attr thay vì data
        const realFilePath = $link.attr('data-realpath'); // ✅ đường dẫn thực
        const folder = $link.attr('data-folder'); 

        console.log("Clicked contract", contractNumber);
        console.log("confileName", confileName);

        if (!confileName) {
            console.error("Không lấy được confileName");
            return;
        }
        const pdfUrl = `https://localhost:7190/${folder}/${confileName}`;

        //const pdfUrl = `https://localhost:7190/temp-pdfs/${confileName}`;

        $('#btnSignContract').data('contractNumber', contractNumber);
        $('#btnSignContract').data('filePath', realFilePath); // ✅ gán đúng key là filePath
        $('#pdfViewer iframe').attr('src', pdfUrl);
        $('#pdfViewer').removeClass('hidden');
        const signed = signedStateMap[contractNumber.toLowerCase()];
        if (signed === 1) {
            $('#btnSignContract').addClass('hidden');
        } else {

            if (Department === "Admin") {
                $('#btnSignContract').addClass('hidden');
            } else if (Department === "Director") {
                $('#btnSignContract').removeClass('hidden');
            }
            //$('#btnSignContract').removeClass('hidden');
        }
    });

    //nút ký của Director
    $('#btnSignContract').on('click', function () {
        const contractNumber = $(this).data('contractNumber');
        const filePath = $(this).data('filePath'); // ✅ Đúng đường dẫn nội bộ

        $.ajax({
            url: `/admin/account/SignPdfWithAdminCertificate`, // Không cần truyền staffId trong URL nữa
            type: "POST",
            contentType: "application/json",
            headers: {
                "Authorization": "Bearer " + tokenJWT
            },
            data: JSON.stringify({
                StaffId: StaffId,
                FilePath: filePath,
                ContractNumber: contractNumber
            }),
            success: function (res) {
                if (res.success) {
                    signedStateMap[contractNumber] = 1; // Cập nhật trạng thái
                    $('#btnSignContract').addClass('hidden');
                    $('#pdfViewer').addClass('hidden');
                    $('#pendingContracts').DataTable().ajax.reload(null, false); // Reload bảng không mất trang
                    document.getElementById("contentModalSuccess").innerHTML = "Ký hợp đồng thành công!";
                    $("#ModalSuccess").modal("show");
                } else {
                    showError("Không thể ký hợp đồng. Vui lòng thử lại.");
                }
            },
            error: function (xhr) {
                showError("Lỗi khi gọi API ký hợp đồng!");
            }
        });
    });

    //gửi cho client
    $('#pendingContracts').on('click', '.btn-send-client', function () {
        const contractNumber = $(this).data('contractnumber');
        //const fileName = $(this).data('confilename');
        const filePath = $(this).data('filepath');

        $.ajax({
            url: '/admin/Account/SendEmailtoclient',
            type: 'POST',
            headers: {
                "Authorization": "Bearer " + tokenJWT
            },
            contentType: 'application/json',
            data: JSON.stringify({
                StaffId: StaffId,
                FilePath: filePath,
                ContractNumber: contractNumber
            }),
            success: function (res) {
                if (res.success) {
                    // showSuccess("Duyệt hợp đồng thành công!");
                    document.getElementById("contentModalSuccess").innerHTML = "Đã gửi hợp đồng thành công!";
                    $("#ModalSuccess").modal("show");
                    // backBtn3.click();
                    // init("", "Tất cả");
                    $('#pdfViewer').addClass('hidden');
                    $('#pendingContracts').DataTable().ajax.reload(null, false); // Reload bảng không mất trang
                } else {
                    showError("Gửi hợp đồng thất bại: " + (res.message || ""));
                }
            },
            error: function () {
                console.error("Lỗi khi duyệt:", error);
                showError("Lỗi khi duyệt hợp đồng. Vui lòng thử lại.");
            }
        });
    });

    //duyệt
    $('#pendingContracts').on('click', '.btn-approve', function () {
        const contractNumber = $(this).data('contractnumber');
        const realFilePath = $(this).data('filepath');

        if (!contractNumber) {
            showError("Không tìm thấy mã hợp đồng.");
            return;
        }

        // Xác nhận
        if (!confirm("Bạn có chắc chắn muốn duyệt hợp đồng này?")) return;

        $.ajax({
            url: "/admin/account/Insert", // 🔧 sửa đúng URL nếu khác
            type: "POST",
            contentType: "application/json",
            headers: {
                "Authorization": "Bearer " + tokenJWT
            },
            data: JSON.stringify({
                StaffId: StaffId,
                FilePath: realFilePath,
                ContractNumber: contractNumber
            }),
            success: function (res) {
                if (res.success) {
                   // showSuccess("Duyệt hợp đồng thành công!");
                    document.getElementById("contentModalSuccess").innerHTML = "Duyệt hợp đồng thành công!";
                    $("#ModalSuccess").modal("show");
                    backBtn3.click();
                    // Reload lại bảng để cập nhật UI
                    init("", "Tất cả");
                   // $('#pendingContracts').DataTable().ajax.reload(null, false);
                } else {
                    showError("Duyệt hợp đồng thất bại: " + (res.message || ""));
                }
            },
            error: function (xhr, status, error) {
                console.error("Lỗi khi duyệt:", error);
                showError("Lỗi khi duyệt hợp đồng. Vui lòng thử lại.");
            }
        });
    });

    $(document).ready(function () {

        init("", "Tất cả");
        // Khi bấm nút tìm kiếm
        $('#searchBtn').on('click', function (e) {
            e.preventDefault();

            var keyword = $('input[type="text"]').val();  // Lấy giá trị từ ô input
            var category = $('select').val(); // Lấy giá trị từ select

            // Gọi lại hàm init() với giá trị mới
            init(keyword, category);
        });

    });

    function init(keyword, category) {
        if ($.fn.DataTable.isDataTable("#listCompany")) {
            $("#listCompany").DataTable().destroy(); // Xóa DataTable cũ trước khi tạo lại
        }
        console.log("Chức vụ của nhân viên là:", Department);
        var table = $('#listCompany').DataTable({
            processing: true,
            serverSide: true,
            paging: true,
            searching: false,
            searchDelay: 400,
            // scrollY: false,
            iDisplayLength: 7,
            bLengthChange: false,
            language: {
                info: "Hiển thị _START_ đến _END_ của _TOTAL_ tài khoản",
                lengthMenu: "Hiển thị _MENU_  tài khoản",
                //search: "Tìm kiếm",
                processing: "Đang tải dữ liệu...",
                paginate: {
                    previous: "Trước",
                    next: "Tiếp theo",
                    last: "Cuối"
                }
            },

            ajax: {
                url: "/admin/account/GetAllCompany",
                type: "POST",
                headers: {
                    "Authorization": "Bearer " + tokenJWT
                },
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                beforeSend: function () {
                    // Optional: Show loading indicator
                },
                data: function (data) {
                    var currentPageIndex = data.start / data.length + 1;

                    return JSON.stringify({
                        PageSize: data.length,
                        Page: currentPageIndex,
                        Keyword: keyword,
                        Category: category
                    });
                },

                dataSrc: function (res) {
                    console.log("List hop dong da duyet",res.listCompany);
                    return res.success && res.listCompany && res.listCompany.results ? res.listCompany.results : [];

                },
                dataFilter: function (data) {
                    var page = $.parseJSON(data);
                    if (!page.success || !page.listCompany) {
                        page.recordsTotal = 0;
                        page.recordsFiltered = 0;
                        return JSON.stringify(page);
                    }
                    page.recordsTotal = page.listCompany.rowCount || 0;
                    page.recordsFiltered = page.listCompany.rowCount || 0;
                    return JSON.stringify(page);
                },
                error: function (xhr, status, error) {
                    console.error("Lỗi khi lấy dữ liệu:", error);
                    // alert("Không thể tải danh sách công ty. Vui lòng thử lại!");
                    showError("Không thể tải danh sách công ty. Vui lòng thử lại!");

                }
            },
            columns: [
                {
                    data: null, width: "5%", render: function (data, type, row, meta) {
                        return meta.row + 1; // Hiển thị số thứ tự tự động
                    }
                },
                { data: "customerId", width: "17%" },
                { data: "companyName", width: "13%" },
                { data: "taxCode", width: "11%" },
                { data: "companyAccount", width: "15%" },
                {
                    data: "accountIssuedDate",
                    width: "19%",
                    render: function (data, type, row) {
                        if (!data) return ""; // Tránh lỗi khi dữ liệu null
                        let date = new Date(data);
                        return date.toLocaleDateString("vi-VN"); // Định dạng dd/mm/yyyy
                    }
                },
                {
                    data: "isActive",
                    width: "13%",
                    render: function (data, type, row) {
                        let isChecked = data ? "checked" : "";
                        let text = data ? "ON" : "OFF";

                        return `
                        <label class="switch">
                            <input type="checkbox" class="toggle-customerType" data-id="${row.customerId}" ${isChecked}>
                                 <span class="slider round">
                    <span class="toggle-text on">ON</span>
                    <span class="toggle-text off">OFF</span>
                </span>
                        </label>
                        `;
                    }
                },

                {
                    data: null,
                    width: "10%",
                    render: function (data, type, row) {
                        return `<div class="text-center">
                            <i id="BtnUpdate" class="fa-solid fa-pen-to-square text-info update-btn"
                                style="cursor: pointer;font-size: 1.2rem;" title="Cập nhật" data-id="${row.customerId}"></i></div>`;
                    }
                }

            ],

            createdRow: function (row, data, dataIndex) {
                $(row).data("fullData", data); // Lưu toàn bộ dữ liệu vào row
            },

            columnDefs: [{
                "defaultContent": "-",
                "targets": "_all"
            }]
        });
    }

    function updateTongTien() {
        const timeSelect = document.getElementById("timeGiahan");
        const serviceType = document.getElementById("serviceType");
        const contractType = document.getElementById("cType");

        if (!timeSelect || !serviceType || !contractType) return;

        const selectedTimeValue = timeSelect.value;
        const selectedOption = serviceType.options[serviceType.selectedIndex];
        const unitPrice = parseFloat(selectedOption.getAttribute('data-price')) || 0;
        const unitID = selectedOption.getAttribute('value') || "";

        const selectedContractType = contractType.value;

        if (!selectedTimeValue || !unitID) {
            document.getElementById("amount").value = "Vui lòng chọn thời gian";
            return;
        }

        const months = parseInt(selectedTimeValue.replace("month", ""));
        let total = unitPrice * months;
        if (selectedContractType === "vip") {
            total *= 1.3;
        }
        $.ajax({
            url: `/admin/contract/GetListEndow?id=${unitID}`,
            headers: {
                "Authorization": "Bearer " + tokenJWT
            },
            type: "GET",
            contentType: "application/json; charset=utf-8",
            success: function (response) {
                console.log("Ưu đãi lấy được:", response);

                let bestDiscount = 0;
                let bestDuration = -1; // để phân biệt ưu đãi null và 0 tháng

                if (Array.isArray(response.listendow) && response.listendow.length > 0) {
                    const now = new Date();
                    response.listendow.forEach(function (item) {
                        const start = new Date(item.startdate);
                        const end = new Date(item.enddate);
                        const duration = item.duration; // có thể null

                        if (now >= start && now <= end) {
                            // Nếu duration == null => hợp lệ cho mọi tháng
                            if (duration == null || months >= duration) {
                                if (
                                    duration == null || // ưu tiên duration null nếu chưa có ưu đãi nào
                                    duration > bestDuration ||
                                    (duration === bestDuration && item.discount > bestDiscount)
                                ) {
                                    bestDuration = duration ?? 0; // null thì gán 0
                                    bestDiscount = item.discount;
                                }
                            }
                        }
                    });
                }

                // Áp dụng giảm giá nếu tìm được ưu đãi phù hợp
                if (bestDiscount > 0) {
                    total = total * (1 - bestDiscount / 100);
                }

                document.getElementById("amount").value = formatMoney(total);
            },
            error: function () {
                console.error("Không lấy được ưu đãi.");
                document.getElementById("amount").value = formatMoney(total);
            }
        });
    }

    // Hàm định dạng tiền
    function formatMoney(number) {
        return number.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });
    }

    // Gắn sự kiện onchange
    document.getElementById("timeGiahan").addEventListener("change", updateTongTien);
    document.getElementById("serviceType").addEventListener("change", updateTongTien);
    document.getElementById("cType").addEventListener("change", updateTongTien);

    $(document).on("change", ".toggle-customerType", function () {
        let toggleElement = $(this);
        let customerId = toggleElement.attr("data-id");
        let newStatus = toggleElement.is(":checked");
        let oldStatus = !newStatus;

        console.log("Customer ID:", customerId);
        console.log("Trạng thái gửi lên:", newStatus);

        if (!customerId) {
            console.error("CustomerID bị null hoặc undefined!");
            return;
        }

        var data = {
            status: newStatus,
            CustomerId: customerId,
        };

        // Hiển thị modal xác nhận
        document.getElementById("contentModalConfirm").innerHTML = "Bạn có chắc muốn cập nhật trạng thái không?";
        const modalConfirmEl = document.getElementById("confirmModal");
        const modalConfirm = new bootstrap.Modal(modalConfirmEl);
        modalConfirm.show();

        // Xử lý khi bấm nút xác nhận
        $("#confirmButton1").off("click").on("click", function () {
            modalConfirm.hide();

            $.ajax({
                url: "/admin/account/UpdateStatus",
                type: "PUT",
                headers: {
                    "Authorization": "Bearer " + tokenJWT
                },
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(data),
                success: function (res) {
                    if (res.success) {
                        console.log("Cập nhật thành công!");
                        let textElement = toggleElement.siblings(".slider").find(".toggle-text");
                        textElement.text(newStatus ? "ON" : "OFF");

                        toggleElement.prop("checked", newStatus);

                        document.getElementById("contentModalSuccess").innerHTML = "Cập nhật thành công!";
                        $("#ModalSuccess").modal("show");

                        var keyword = $('input[type="text"]').val();
                        var category = $('select').val();
                        init(keyword, category);
                    } else {
                        document.getElementById("contentModalSuccess").innerHTML = "Cập nhật thất bại!";
                        $("#ModalSuccess").modal("show");
                        toggleElement.prop("checked", oldStatus);
                    }
                },
                error: function () {
                    console.error("Lỗi khi gọi API.");
                    toggleElement.prop("checked", oldStatus);
                }
            });
        });

        // Nếu modal bị đóng mà KHÔNG bấm xác nhận → khôi phục toggle
        $(modalConfirmEl).off("hidden.bs.modal").on("hidden.bs.modal", function () {
            toggleElement.prop("checked", oldStatus);
        });
    });

    $("#listCompany").on("click", ".update-btn", function () {
        var rowData = $(this).closest("tr").data("fullData"); // Lấy dữ liệu từ hàng
        console.log("Click vào cập nhật tài khoản:", rowData);
        if (rowData) {
            $("#cName2").val(rowData.companyName);
            $("#cId2").val(rowData.customerId.trim());
            $("#cTaxCode2").val(rowData.taxCode);
            $("#cEmail2").val(rowData.companyAccount);
            $("#cPhone2").val(rowData.cPhoneNumber || "");
            $("#cAddress2").val(rowData.cAddress || "");
            $("#cType2").val(rowData.customerType ? "vip" : "normal");

            $("#aNameID2").val(rowData.customerId.trim());
            $("#aEmail2").val(rowData.rootAccount || "");
            $("#aName2").val(rowData.rootName || "");
            $("#aPhone2").val(rowData.rPhoneNumber || "");
            $("#aStatus2").val(rowData.isActive ? "1" : "0");
            $("#aDate2").val(rowData.dateOfBirth ? rowData.dateOfBirth.substring(0, 10) : "");
            $("#aGender2").val(rowData.gender ? "nu" : "nam");
            $("#accountIssuedDate").val(rowData.accountIssuedDate ? rowData.accountIssuedDate.substring(0, 10) : "");
        }
    });
    // Hàm định dạng tiền
    function formatMoney(number) {
        return number.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });
    }

    function getID1(cID) {
        var cName = document.getElementById("cName").value;
        var cTaxCode = document.getElementById("cTaxCode").value;
        var cEmail = document.getElementById("cEmail").value;
        var cPhone = document.getElementById("cPhone").value;
        var cAddress = document.getElementById("cAddress").value;
        var cType = document.getElementById("cType").value;
        var ContractNumber = document.getElementById("ContractNumber").value.trim();
        var serviceType = document.getElementById("serviceType").value.trim();
        var aEmail = document.getElementById("aEmail").value;
        var aName = document.getElementById("aName").value;
        var aPhone = document.getElementById("aPhone").value;
        var aStatus = document.getElementById("aStatus").value;
        var aDate = document.getElementById("aDate").value;
        var aGender = document.getElementById("aGender").value;
        var startDate = document.getElementById("startDate").value;
        var endDate = document.getElementById("endDate").value;
        var amount = document.getElementById("amount").value.trim();

        var serviceTypeElement = document.getElementById("serviceType");
        var serviceTypeText = serviceTypeElement.options[serviceTypeElement.selectedIndex].text; // Lấy nội dung hiển thị
        var normalizedAmount = parseFloat(amount.replace(/[^\d]/g, ''));
        var cValues = {
            CustomerId: cID || "AUTO_GENERATED_ID",
            CompanyName: cName,
            TaxCode: cTaxCode,
            CompanyAccount: cEmail,
            AccountIssuedDate: new Date().toISOString(),
            CPhoneNumber: cPhone,
            CAddress: cAddress,
            CustomerType: cType.toLowerCase() === "vip",
            ContractNumber: ContractNumber,
            ServiceType: serviceTypeText, // Lưu tên hiển thị thay vì ID
            RootAccount: aEmail,
            RootName: aName,
            RPhoneNumber: aPhone,
            IsActive: aStatus.trim() === "1",
            DateOfBirth: aDate ? new Date(aDate).toISOString() : null,
            Gender: aGender === "nu",
            Startdate: startDate,
            EndDate: endDate,
            Amount: normalizedAmount
        };
        return cValues;
    }

    function getID2(cID) {
        var cName = document.getElementById("cName2").value;
        var cTaxCode = document.getElementById("cTaxCode2").value;
        var cEmail = document.getElementById("cEmail2").value;
        var cPhone = document.getElementById("cPhone2").value.replace(/\D/g, '');
        var cAddress = document.getElementById("cAddress2").value;
        var cType = document.getElementById("cType2").value;


        var aEmail = document.getElementById("aEmail2").value;
        var aName = document.getElementById("aName2").value;
        var aPhone = document.getElementById("aPhone2").value.replace(/\D/g, '');
        var aStatus = document.getElementById("aStatus2").value;
        var aDate = document.getElementById("aDate2").value;
        var aGender = document.getElementById("aGender2").value;

        var cValues = {
            CustomerId: cID || "AUTO_GENERATED_ID",
            CompanyName: cName,
            TaxCode: cTaxCode,
            CompanyAccount: cEmail,
            AccountIssuedDate: new Date().toISOString(),
            CPhoneNumber: cPhone,
            CAddress: cAddress,
            CustomerType: cType.toLowerCase() === "vip",
            ContractNumber: "",
            ServiceType: "", // Lưu tên hiển thị thay vì ID

            RootAccount: aEmail,
            RootName: aName,
            RPhoneNumber: aPhone,
            IsActive: aStatus.trim() === "1",
            DateOfBirth: aDate ? new Date(aDate).toISOString() : null,
            Gender: aGender === "nu",
            Startdate: null,
            Enddate: null,
            Amount: 0
        };
        return cValues;
    }

    function SaveAccount() {
        var cId = document.getElementById("cId").value.trim();
        var cId2 = document.getElementById("cId2").value.trim();
        console.log("Gia tri cId la: ", cId);
        console.log("Gia tri cId2 la: ", cId2);
        if (cId === "" && cId2 !== "") {

            cValues = getID2(cId2);
            console.log("Gia tri cValues2  la: ", cValues);

            if (!cValues.CompanyName || !cValues.TaxCode || !cValues.CompanyAccount || !cValues.CPhoneNumber || !cValues.CAddress || !cValues.RootAccount || !cValues.RootName || !cValues.RPhoneNumber) {

                showError("Vui lòng nhập đầy đủ thông tin.");

                return;
            }
        }
        else {
            cValues = getID1(cId);
            console.log("Gia tri cValues  la: ", cValues);

            var startDate = new Date(cValues.Startdate);
            var endDate = new Date(cValues.EndDate);
            if (startDate >= endDate) {
                showError("Kiểm tra lại ngày tháng của hợp đồng: Ngày bắt đầu phải nhỏ hơn ngày kết thúc.");
                return;
            }
            if (!cValues.CompanyName || !cValues.TaxCode || !cValues.CompanyAccount || !cValues.CPhoneNumber || !cValues.CAddress || !cValues.RootAccount || !cValues.RootName || !cValues.RPhoneNumber || !cValues.Amount) {

                showError("Vui lòng nhập đầy đủ thông tin.");
                return;
            }

        }
        console.log("Gia tri la: ", cValues);


        var phoneRegex = /^(0\d{9,10})$/; // Số điện thoại bắt đầu bằng số 0, có 10 hoặc 11 chữ số
        // Biểu thức chính quy kiểm tra email hợp lệ
        var emailRegex = @Html.Raw("/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/");

        // Kiểm tra mã số thuế (9 chữ số)
        var taxCodeRegex = /^[a-zA-Z0-9]{9}$/;

        // Kiểm tra độ dài ContractNumber (tối đa 10 ký tự)

        if (!phoneRegex.test(cValues.CPhoneNumber)) {
            showError("Số điện thoại khách hàng không hợp lệ. Phải có 10 chữ số và bắt đầu bằng 0.");
            return;
        }

        if (!phoneRegex.test(cValues.RPhoneNumber)) {
            showError("Số điện thoại người đại diện không hợp lệ. Phải có 10 chữ số và bắt đầu bằng 0.");
            return;
        }

        // Kiểm tra định dạng email
        if (!emailRegex.test(cValues.CompanyAccount)) {
            showError("Email khách hàng không hợp lệ.");
            return;
        }

        if (!emailRegex.test(cValues.RootAccount)) {
            showError("Email người đại diện không hợp lệ.");
            return;
        }

        // Kiểm tra mã số thuế
        if (!taxCodeRegex.test(cValues.TaxCode)) {
            showError("Mã số thuế không hợp lệ. Phải có đúng 9 kí tự.");
            return;
        }

        // Xác định Insert hay Update
        var isUpdate = cValues.CustomerId && cValues.CustomerId !== "AUTO_GENERATED_ID";
        var url = isUpdate ? `/admin/account/Update?id=${StaffId}` : `/admin/account/GenerateContract?id=${StaffId}`;
        var confirmText = isUpdate ? "Bạn có chắc muốn cập nhật tài khoản không?" : "Bạn có chắc muốn tạo hợp đồng không?";

        document.getElementById("contentModalConfirm").innerHTML = confirmText;
        const modal = new bootstrap.Modal(document.getElementById("confirmModal"));
        modal.show();

        $("#confirmButton1").off("click").on("click", function () {
            modal.hide();
            $.ajax({
                url: url,
                type: 'POST',
                headers: {
                    "Authorization": "Bearer " + tokenJWT
                },
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: JSON.stringify(cValues),
                success: function (response) {
                    if (response.success) {
                        document.getElementById("contentModalSuccess").innerHTML = isUpdate ? "Cập nhật tài khoản thành công" : "Tạo hợp đồng thành công";
                        $("#ModalSuccess").modal("show");
                        refresh();
                        var keyword = $('input[type="text"]').val();
                        var category = $('select').val();
                        init(keyword, category);
                        // Gọi sự kiện "Quay lại" để trở về danh sách
                        if (isUpdate) {
                            backBtn2.click();
                        }
                        else
                            backBtn.click();
                    }
                },
                error: function (xhr) {
                    let errorMessage = "Lỗi không xác định.";
                    if (xhr.responseJSON) {
                        if (Array.isArray(xhr.responseJSON.message) && xhr.responseJSON.message.length > 0) {
                            errorMessage = xhr.responseJSON.message.join("<br>");
                        } else if (typeof xhr.responseJSON.message === "string" && xhr.responseJSON.message.length > 0) {
                            errorMessage = xhr.responseJSON.message;
                        }
                    }
                    $("#contentModalError").html(errorMessage);
                    $("#ModalError").modal("show");
                    // Gán sự kiện đóng modal vào nút "Đóng"
                    document.getElementById("btnCloseModal").addEventListener("click", function () {
                        $("#ModalError").modal("hide");
                    });
                }
            });
        });
    }

    function refresh() {
        document.getElementById("cId").value = "";
        document.getElementById("cName").value = "";
        document.getElementById("cTaxCode").value = "";
        document.getElementById("cEmail").value = "";
        document.getElementById("cPhone").value = "";
        document.getElementById("cAddress").value = "";
        document.getElementById("cType").value = "normal";
        document.getElementById("serviceType").value = "doi-tac";
        document.getElementById("ContractNumber").value = "";
        document.getElementById("aEmail").value = "";
        // document.getElementById("aNameID").value = "";
        document.getElementById("aName").value = "";
        document.getElementById("aPhone").value = "";
        document.getElementById("aDate").value = "";
        document.getElementById("startDate").value = "";
        document.getElementById("endDate").value = "";
        document.getElementById("aGender").value = "nam";
        document.getElementById("aStatus").value = "1";
        document.getElementById("timeGiahan").value = "";
        document.getElementById("amount").value = "";

        document.getElementById("cId2").value = "";
        document.getElementById("cName2").value = "";
        document.getElementById("cTaxCode2").value = "";
        document.getElementById("cEmail2").value = "";
        document.getElementById("cPhone2").value = "";
        document.getElementById("cAddress2").value = "";
        document.getElementById("cType2").value = "normal";
        // document.getElementById("serviceType2").value = "doi-tac";
        // document.getElementById("ContractNumber2").value = "";
        document.getElementById("aEmail2").value = "";
        document.getElementById("aNameID2").value = "";
        document.getElementById("aName2").value = "";
        document.getElementById("aPhone2").value = "";
        document.getElementById("aDate2").value = "";
        document.getElementById("accountIssuedDate").value = "";

        document.getElementById("aGender2").value = "nam";
        document.getElementById("aStatus2").value = "1";
        //document.getElementById("startDate2").value = "";

        //  document.getElementById("endDate2").value = "";
        //  document.getElementById("amount2").value = "";

    }

    function showError(message) {
        document.getElementById("contentModalError").innerText = message;

        // Khởi tạo modal bằng Bootstrap 5
        var errorModal = new bootstrap.Modal(document.getElementById("ModalError"), {
            keyboard: true, // Cho phép bấm phím ESC để đóng
            backdrop: 'static' // Không đóng modal khi bấm ngoài
        });
        // Hiển thị modal
        errorModal.show();
        // Gán sự kiện đóng modal vào nút "Đóng"
        document.getElementById("btnCloseModal").addEventListener("click", function () {
            errorModal.hide();
        });
    }

    function exportToCsv(event) {
        event.preventDefault();
        console.log("Gọi exportToCsv()");

        var keyword = $('input[type="text"]').val();
        var categoryText = $('select').val();

        $.ajax({
            url: "/Admin/account/ExportToCsv",
            type: "POST",
            contentType: "application/json",
            data: JSON.stringify({ Keyword: keyword, Category: categoryText }),
            xhrFields: {
                responseType: 'blob' // ✅ Nhận phản hồi dạng file blob
            },
            success: function (blob, status, xhr) {
                var filename = "DanhSachKhachHang.csv";

                var link = document.createElement("a");
                link.href = window.URL.createObjectURL(blob);
                link.download = filename;
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);

                $("#contentModalSuccess").html(`
                        <strong>Xuất file thành công!</strong> <br>
                        📥 File đang được tải xuống tự động!
                    `);
                $("#ModalSuccess").modal("show");
            },
            error: function (xhr) {
                console.error("Lỗi Ajax:", xhr.responseText);
                showError("Xuất file thất bại!");
            }
        });
    }

</script>
