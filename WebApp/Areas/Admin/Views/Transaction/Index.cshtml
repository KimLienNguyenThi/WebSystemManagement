@{
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<style>
    .hidden {
        display: none !important;
    }

    .flex-shrink-0 {
        height: 60px;
    }
    /* Căn chỉnh toàn bảng */
    #listTran {
        margin-top: 0 !important; /* Giảm lề trên */
        padding-top: 0 !important;
        border-collapse: collapse; /* Gộp đường viền cho gọn */
        font-size: 14px; /* Cỡ chữ hợp lý */
        line-height: 1.4; /* Giảm chiều cao dòng */
    }

        /* Đảm bảo mỗi ô có độ rộng hợp lý và sát nhau hơn */
        #listTran th, #listTran td {
            padding: 4px 8px; /* Ít padding hơn */
            text-align: left;
            vertical-align: middle; /* Căn giữa theo chiều dọc */
            border: 1px solid #e3e3e3;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            word-wrap: break-word; /* Cho phép bẻ dòng trong các ô dài mà không bị tràn */
        }
        /* Cải thiện giao diện bảng khi có nội dung dài */
        #listTran tbody tr {
            word-wrap: break-word; /* Cho phép bẻ dòng trong các ô dài */
        }

            #listTran tbody tr:hover {
                background-color: #f9f9f9;
                cursor: pointer;
            }
        /* Giảm khoảng cách giữa dòng tiêu đề và các hàng dữ liệu */
        #listTran th {
            padding-top: 3px; /* Giảm khoảng cách trên tiêu đề */
            padding-bottom: 3px; /* Giảm khoảng cách dưới tiêu đề */
            text-align: center; /* Căn giữa văn bản tiêu đề */
            background-color: #f1f1f1; /* Đặt màu nền cho tiêu đề */
            font-weight: bold; /* Làm đậm các tiêu đề */
        }

        /* Các phần tử trong bảng có thể điều chỉnh theo nhu cầu */
        #listTran td {
            font-size: 14px;
        }

        /* Thêm hiệu ứng hover cho các hàng trong bảng */
        #listTran tbody tr:hover {
            background-color: #e7e7e7;
            cursor: pointer;
        }

        /* Đảm bảo không bị tràn khi có văn bản dài */
        #listTran td {
            text-overflow: ellipsis;
            overflow: hidden;
            white-space: nowrap;
        }

    .card-body {
        padding-top: 5px;
    }

    .switch {
        position: relative;
        display: inline-block;
        width: 60px;
        height: 30px;
    }

        .switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }

    .slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #ccc;
        transition: 0.4s;
        border-radius: 30px;
    }

        .slider:before {
            position: absolute;
            content: "";
            height: 24px;
            width: 24px;
            left: 3px;
            bottom: 3px;
            background-color: white;
            transition: 0.4s;
            border-radius: 50%;
        }

    input:checked + .slider {
        background-color: #4CAF50;
    }

        input:checked + .slider:before {
            transform: translateX(30px);
        }

    /* Thêm chữ ON / OFF */
    .toggle-text {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        font-size: 13px;
        font-weight: bold;
        color: white;
        transition: 0.4s;
    }

        /* Chữ ON bên trái, OFF bên phải */
        .toggle-text.on {
            left: 10px;
        }

        .toggle-text.off {
            right: 10px;
        }

    /* Khi OFF: Hiển thị OFF, ẩn ON */
    input:not(:checked) + .slider .toggle-text.on {
        display: none;
    }

    /* Khi ON: Hiển thị ON, ẩn OFF */
    input:checked + .slider .toggle-text.off {
        display: none;
    }

    .p-3 {
        padding-left: 1rem !important;
        padding-right: 1rem !important;
        padding-top: 0px;
    }
</style>
<body>
    <div id="companyListContainer" class="container-fluid d-flex flex-column vh-100">
        <!-- Mục lọc -->
        <div class="row flex-shrink-0">
            <div class="col-12">
                <div class="card p-2">
                    <form class="d-flex align-items-center w-100" style="gap: 10px;">
                        <input type="text" class="form-control form-control-sm w-25" style="min-width: 170px; padding: 5px;" placeholder="Mã hợp đồng/Mã giao dịch/Email">

                        <input type="date" id="startDate" class="form-control form-control-sm" style="max-width: 300px; padding: 5px;" placeholder="Từ ngày">
                        <input type="date" id="endDate" class="form-control form-control-sm" style="max-width: 300px; padding: 5px;" placeholder="Đến ngày">

                        <button id="searchBtn" class="btn btn-primary btn-sm flex-grow-1 px-3" style="padding: 5px; margin-right: 10px;width: 500px;">🔍 Tìm kiếm</button>
                    </form>
                </div>
            </div>
        </div>

        <!-- Mục hiển thị danh sách -->
        <div class="row flex-grow-1 overflow-auto">
            <div class="col-12">
                <div class="card p-3 h-100">
                    <div class="table-responsive h-100">
                        <table id="listTran" class="table table-striped table-bordered">
                            <thead class="table-light">
                                <tr>
                                    <th>STT</th>
                                    <th>Mã hợp đồng</th>
                                    <th>Mã giao dịch</th>
                                    <th>Số tiền</th>
                                    <th>Nội dung</th>
                                    <th>Kết quả</th>
                                    <th>Phương thức</th>
                                    <th>Email</th>
                                    <th>Xem hợp đồng</th>
                                </tr>
                            </thead>
                            <tbody>
                                <!-- Thêm các dòng khác tương tự -->
                            </tbody>
                        </table>

                        <!-- iframe hiển thị PDF -->
                        <div id="pdfViewer" class="hidden mt-3" style="border:none; text-align: center;">
                            <iframe id="pdfFrame" src="" width="90%" height="470px" style="border:none;"></iframe>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>



<!-- Modal confirm -->
<div class="modal fade" id="confirmModal" tabindex="-1" aria-labelledby="xacNhanModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="xacNhanModalLabel">Xác nhận hành động</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <span class="" id="contentModalConfirm"></span>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal"> Đóng </button>
                <button type="button" class="btn btn-primary" id="confirmButton1">Xác nhận</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal success-->
<div class="modal fade" id="ModalSuccess" tabindex="-1" role="dialog" aria-labelledby="ModalSuccess" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-body text-center bg-green">
                <span id="contentModalSuccess"></span>
            </div>
        </div>
    </div>
</div>

<!-- Modal thông báo lỗi -->
<div class="modal fade" id="ModalError" tabindex="-1" aria-labelledby="ModalErrorLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="ModalErrorLabel">Lỗi</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p id="contentModalError"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" id="btnCloseModal">Đóng</button>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    var Department = "@User.FindFirst("Department")?.Value";
    var StaffId = "@User.FindFirst("StaffId")?.Value";
    const tokenJWT = localStorage.getItem("accessToken");
    $(document).ready(function () {
        // Mặc định "Đến ngày" là hôm nay
        const today = new Date().toISOString().split('T')[0];
        $('#endDate').val(today);
        $('#endDate').attr('max', today);

        // Khởi tạo bảng lần đầu
        init("", "", "");

        // Khi bấm nút tìm kiếm
        $('#searchBtn').on('click', function (e) {
            e.preventDefault();

            const keyword = $('input[placeholder="Mã hợp đồng/Mã giao dịch/Email"]').val().trim();
            const startdate = $('#startDate').val();
            const enddate = $('#endDate').val();

            // Gọi lại bảng
            init(keyword, startdate, enddate);
        });
    });


    // Gán mặc định "Đến ngày" là hôm nay, không cho chọn tương lai
    window.addEventListener("DOMContentLoaded", function () {
        const today = new Date().toISOString().split('T')[0];
        const endDate = document.getElementById("endDate");

        endDate.value = today;
        endDate.max = today;
    });

    document.getElementById("searchBtn").addEventListener("click", function () {
        const keyword = document.querySelector('input[placeholder="Mã hợp đồng/Mã giao dịch/Email"]').value.trim();
        const start = document.getElementById("startDate").value;
        const end = document.getElementById("endDate").value;

        if (!end) {
            alert("Vui lòng chọn 'Đến ngày'");
            return;
        }

        if (start && start > end) {
            alert("'Từ ngày' không được lớn hơn 'Đến ngày'");
            return;
        }

        init(keyword, start, end); // Gọi lại bảng với dữ liệu mới
    });
    function init(keyword, startdate, enddate) {
        if ($.fn.DataTable.isDataTable("#listTran")) {
            $("#listTran").DataTable().destroy();
        }

        const today = new Date().toISOString().split("T")[0];

        var table = $('#listTran').DataTable({
            processing: true,
            serverSide: true,
            paging: true,
            searching: false,
            searchDelay: 400,
            iDisplayLength: 7,
            bLengthChange: false,
            language: {
                info: "Hiển thị _START_ đến _END_ của _TOTAL_ tài khoản",
                lengthMenu: "Hiển thị _MENU_  tài khoản",
                processing: "Đang tải dữ liệu...",
                paginate: {
                    previous: "Trước",
                    next: "Tiếp theo",
                    last: "Cuối"
                }
            },

            ajax: {
                url: "/admin/transaction/GetAllCompany",
                type: "POST",
                headers: {
                    "Authorization": "Bearer " + tokenJWT
                },
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: function (data) {
                    var currentPageIndex = data.start / data.length + 1;

                    // Xử lý ngày bắt đầu và kết thúc
                    let start = startdate && startdate !== "" ? startdate : null;
                    let end = enddate && enddate !== "" ? enddate : today;

                    return JSON.stringify({
                        PageSize: data.length,
                        Page: currentPageIndex,
                        Keyword: keyword || "",
                        Start: start,
                        End: end
                    });
                },
                dataSrc: function (res) {
                    console.log("Kết quả giao dịch: ",res);
                    return res.success && res.listTran?.results ? res.listTran.results : [];
                },
                dataFilter: function (data) {
                    var page = $.parseJSON(data);
                    page.recordsTotal = page.listTran?.rowCount || 0;
                    page.recordsFiltered = page.listTran?.rowCount || 0;
                    return JSON.stringify(page);
                },
                error: function (xhr, status, error) {
                    console.error("Lỗi khi lấy dữ liệu:", error);
                    showError("Không thể tải danh sách công ty. Vui lòng thử lại!");
                }
            },

            columns: [
                {
                    data: null, width: "5%", render: function (data, type, row, meta) {
                        return meta.row + 1; // Hiển thị số thứ tự tự động
                    }
                },
                { data: "contractnumber", width: "17%" },
                { data: "transactionCode", width: "13%" },
                { data: "amount", width: "11%" },
                { data: "orderInfo", width: "15%" },
                {
                    data: "responseCode",
                    width: "19%",
                    render: function (data, type, row) {
                        if (data === "00") {
                            return '<span class="text-success">Thành công</span>';
                        } else {
                            return '<span class="text-danger">Thất bại</span>';
                        }
                    }
                },
                {
                    data: "paymentMethod",
                    width: "13%",
                    
                },
                {
                    data: "email",
                    width: "13%",

                },
                {
                    data: "confileName",
                    width: "25%",
                    render: function (data, type, row) {
                        if (!data) return "<span class='text-muted'>Chưa có file</span>";

                        const fileName = data.split('/').pop();
                        const folder ="signed-contracts";

                        return `
                                    <a href="/signed-contracts/${fileName}"
                                    target="_blank"
                                    class="pdf-link"
                                        data-id="${row.contractnumber}"
                                    data-confilename="${fileName}"
                                        data-realpath="${row.filePath}"
                                    data-folder="${folder}"
                                    data-email="${row.email}">
                                    <i class="fa-solid fa-file-pdf text-danger" style="font-size: 1.3rem;"></i>Xem hợp đồng
                                </a>`;
                    }
                },
                
            ],
            createdRow: function (row, data, dataIndex) {
                $(row).data("fullData", data);
            },
            columnDefs: [{
                "defaultContent": "-",
                "targets": "_all"
            }]
        });
    }

    //xem hợp đồng
    $('#listTran').on('click', '.pdf-link', function (e) {
        e.preventDefault();

        const $link = $(e.target).closest('.pdf-link');
        const contractNumber = $link.attr('data-id');
        const confileName = $link.attr('data-confilename'); // dùng attr thay vì data
        const realFilePath = $link.attr('data-realpath'); // ✅ đường dẫn thực
        const folder = $link.attr('data-folder');
        const rootaccount = $link.attr('data-email');
        console.log("Clicked contract", contractNumber);
        console.log("confileName", confileName);

        if (!contractNumber || !confileName || !folder) {
            console.error("Thiếu thông tin hợp đồng (contractNumber, confileName, folder)");
            showError("Không thể hiển thị hợp đồng. Thiếu thông tin cần thiết");
            return;
        }
        const pdfUrl = `https://localhost:7190/${folder}/${confileName}`;

        $('#signBtn').data('fileName', confileName);
        $('#signBtn').data('email', rootaccount);
        $('#signBtn').data('contractNumber', contractNumber);
        $('#signBtn').data('realFilePath', realFilePath);

        //('#pdfViewer iframe').attr('src', pdfUrl);
        //$('#pdfViewer').removeClass('hidden');\
        const $pdfViewer = $('#pdfViewer');
        const currentSrc = $('#pdfViewer iframe').attr('src');

        if (currentSrc === pdfUrl && !$pdfViewer.hasClass('hidden')) {
            // Đã mở đúng file này rồi => toggle ẩn
            $pdfViewer.addClass('hidden');
            $('#pdfViewer iframe').attr('src', '');
        } else {
            // Mở file mới
            $('#pdfViewer iframe').attr('src', pdfUrl);
            $pdfViewer.removeClass('hidden');
        }
    });
    </script>