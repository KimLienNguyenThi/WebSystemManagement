// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApp.Models;

#nullable disable

namespace WebApp.Migrations
{
    [DbContext(typeof(ManagementDbContext))]
    [Migration("20250312095224_AddServiceTypeAndContractNumberToCompany")]
    partial class AddServiceTypeAndContractNumberToCompany
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApp.Models.Account", b =>
                {
                    b.Property<string>("CustomerId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("customerID")
                        .IsFixedLength();

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime")
                        .HasColumnName("dateOfBirth");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit")
                        .HasColumnName("gender");

                    b.Property<bool>("OperatingStatus")
                        .HasColumnType("bit")
                        .HasColumnName("operatingStatus");

                    b.Property<string>("RPhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("rPhoneNumber");

                    b.Property<string>("RootAccount")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("rootAccount");

                    b.Property<string>("RootName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("rootName");

                    b.HasKey("CustomerId")
                        .HasName("PK__Account__B611CB9D4A9754C0");

                    b.HasIndex(new[] { "RPhoneNumber" }, "UQ__Account__53AA789A584863BE")
                        .IsUnique();

                    b.HasIndex(new[] { "RootAccount" }, "UQ__Account__54E43460B677250D")
                        .IsUnique();

                    b.ToTable("Account", (string)null);
                });

            modelBuilder.Entity("WebApp.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AccountIssuedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("accountIssuedDate");

                    b.Property<string>("CAddress")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("cAddress");

                    b.Property<string>("CPhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cPhoneNumber");

                    b.Property<string>("CompanyAccount")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("companyAccount");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("companyName");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("customerID")
                        .IsFixedLength();

                    b.Property<bool>("CustomerType")
                        .HasColumnType("bit")
                        .HasColumnName("customerType");

                    b.Property<string>("TaxCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("taxCode");

                    b.HasKey("Id")
                        .HasName("PK__Company__3213E83F6A5D0E7A");

                    b.HasIndex(new[] { "CPhoneNumber" }, "UQ__Company__978110643401CA0C")
                        .IsUnique();

                    b.HasIndex(new[] { "CompanyAccount" }, "UQ__Company__A80FF6F89EC30976")
                        .IsUnique();

                    b.HasIndex(new[] { "CustomerId" }, "UQ__Company__B611CB9CAA8B2E97")
                        .IsUnique();

                    b.HasIndex(new[] { "TaxCode" }, "UQ__Company__D97858A6F98D8988")
                        .IsUnique();

                    b.ToTable("Company", (string)null);
                });

            modelBuilder.Entity("WebApp.Models.Loginadmin", b =>
                {
                    b.Property<string>("StaffId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("staffID")
                        .IsFixedLength();

                    b.Property<string>("PassWordAd")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("passWordAD");

                    b.Property<string>("UserNameAd")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("userNameAD");

                    b.HasKey("StaffId")
                        .HasName("PK__LOGINadm__6465E19E8284D9B9");

                    b.ToTable("LOGINadmin", (string)null);
                });

            modelBuilder.Entity("WebApp.Models.Loginclient", b =>
                {
                    b.Property<string>("CustomerId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("customerID")
                        .IsFixedLength();

                    b.Property<string>("PassWordclient")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("passWordclient");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("userName");

                    b.HasKey("CustomerId")
                        .HasName("PK__LOGINcli__B611CB9D8E610CB8");

                    b.ToTable("LOGINclient", (string)null);
                });

            modelBuilder.Entity("WebApp.Models.Staff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("StaffId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("staffID")
                        .IsFixedLength();

                    b.Property<string>("StaffName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("staffNAME");

                    b.Property<string>("StaffPhone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("staffPhone");

                    b.HasKey("Id")
                        .HasName("PK__STAFF__3213E83F5B137B3C");

                    b.HasIndex(new[] { "StaffPhone" }, "UQ__STAFF__61496E384EC44037")
                        .IsUnique();

                    b.HasIndex(new[] { "StaffId" }, "UQ__STAFF__6465E19FC3EC9EF7")
                        .IsUnique();

                    b.ToTable("STAFF", (string)null);
                });

            modelBuilder.Entity("WebApp.Models.Account", b =>
                {
                    b.HasOne("WebApp.Models.Company", "Customer")
                        .WithOne("Account")
                        .HasForeignKey("WebApp.Models.Account", "CustomerId")
                        .HasPrincipalKey("WebApp.Models.Company", "CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Account_Company");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("WebApp.Models.Loginadmin", b =>
                {
                    b.HasOne("WebApp.Models.Staff", "Staff")
                        .WithOne("Loginadmin")
                        .HasForeignKey("WebApp.Models.Loginadmin", "StaffId")
                        .HasPrincipalKey("WebApp.Models.Staff", "StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__LOGINadmi__staff__4BAC3F29");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("WebApp.Models.Loginclient", b =>
                {
                    b.HasOne("WebApp.Models.Company", "Customer")
                        .WithOne("Loginclient")
                        .HasForeignKey("WebApp.Models.Loginclient", "CustomerId")
                        .HasPrincipalKey("WebApp.Models.Company", "CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__LOGINclie__custo__44FF419A");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("WebApp.Models.Company", b =>
                {
                    b.Navigation("Account");

                    b.Navigation("Loginclient");
                });

            modelBuilder.Entity("WebApp.Models.Staff", b =>
                {
                    b.Navigation("Loginadmin");
                });
#pragma warning restore 612, 618
        }
    }
}
